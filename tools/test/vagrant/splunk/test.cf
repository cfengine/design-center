body common control
{
      bundlesequence => { "cfsketch_run" };
      inputs => { "cfengine_stdlib.cf" };
      # inputs => { "../../libraries/copbl/cfengine_stdlib.cf" };
      # inputs => { "../../libraries/copbl/cfengine_stdlib.cf", "main.cf" };
}

bundle common cfsketch_g
{
  classes:
      "splunk_servermode" or => { "server", "servermode" };

  vars:
      "splunk_class_prefix" string => "splunk_";
      "splunk_password" string => "fromsketch";
      "splunk_servername" string => "splunks";
      "splunk_serverport" string => "8997";
      "splunk_clientname" string => "$(sys.fqhost)";
      "splunk_clientport" string => "8089";

      "splunk_inputs" string => "templates/splunk-inputs.conf";

      "splunk_outputs" string => "templates/splunk-outputs.conf";

    splunk_servermode::
      "splunk_installdir" string => "/opt/splunk";
    splunk_servermode.redhat.64_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/splunk/linux/splunk-4.3.4-136012-linux-2.6-x86_64.rpm&ac=&wget=true&name=wget&typed=releases";
    splunk_servermode.redhat.32_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/splunk/linux/splunk-4.3.4-136012.i386.rpm&ac=&wget=true&name=wget&typed=releases";
    splunk_servermode.(debian||ubuntu).64_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/splunk/linux/splunk-4.3.4-136012-linux-2.6-amd64.deb&ac=&wget=true&name=wget&typed=releases";
    splunk_servermode.(debian||ubuntu).32_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/splunk/linux/splunk-4.3.4-136012-linux-2.6-intel.deb&ac=&wget=true&name=wget&typed=releases";

    !splunk_servermode::
      "splunk_installdir" string => "/opt/splunkforwarder";

    !splunk_servermode.redhat.64_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/universalforwarder/linux/splunkforwarder-4.3.4-136012-linux-2.6-x86_64.rpm&ac=&wget=true&name=wget&typed=releases";
    !splunk_servermode.redhat.32_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/universalforwarder/linux/splunkforwarder-4.3.4-136012.i386.rpm&ac=&wget=true&name=wget&typed=releases";
    !splunk_servermode.(debian||ubuntu).64_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/universalforwarder/linux/splunkforwarder-4.3.4-136012-linux-2.6-amd64.deb&ac=&wget=true&name=wget&typed=releases";
    !splunk_servermode.(debian||ubuntu).32_bit::
      "splunk_packageurl" string => "http://www.splunk.com/page/download_track?file=4.3.4/universalforwarder/linux/splunkforwarder-4.3.4-136012-linux-2.6-intel.deb&ac=&wget=true&name=wget&typed=releases";

}

bundle agent cfsketch_run
{
  methods:
      "cfsketch_g" usebundle => "cfsketch_g";
      "run" usebundle => splunk_install("splunk_",
                                        "/vagrant/splunk",
                                        $(cfsketch_g.splunk_password),
                                        $(cfsketch_g.splunk_servername),
                                        $(cfsketch_g.splunk_serverport),
                                        $(cfsketch_g.splunk_clientname),
                                        $(cfsketch_g.splunk_clientport),
                                        $(cfsketch_g.splunk_inputs),
                                        $(cfsketch_g.splunk_outputs),
                                        $(cfsketch_g.splunk_packageurl),
                                        $(cfsketch_g.splunk_installdir));

}

bundle agent splunk_install(class_prefix, bundle_home, password, servername, serverport, clientname, clientport, inputs, outputs, packageurl, installdir)
{
  classes:
      "servermode" or => { "servermode", "$(class_prefix)servermode" }; # will use default:servermode in namespaced mode
      "splunk_boot_enabled" expression => fileexists("/etc/init.d/splunk");

      # note we don't test the package, because Splunk is often installed from source and from a custom package
      "splunk_installed" expression => fileexists($(installdir));

      "package_downloaded" expression => fileexists($(deb_temp_pkg));

      "detected_forwarder" expression => fileexists("/opt/splunkforwarder");
      "detected_server" expression => fileexists("/opt/splunk");

      "abort_configure" and => { "detected_forwarder", "detected_server" };

    splunk_installed::
      "splunk_configured" expression => returnszero("/bin/grep -q $(servername) $(splunk_root)/etc/system/local/outputs.conf", "useshell");

  vars:
      "splunk_root"     string => "$(installdir)";
      "splunk_control"  string => "$(splunk_root)/bin/splunk";
      "splunk_options"  string => "--no-prompt --answer-yes --accept-license";
      "deb_temp_pkg"    string => "/var/tmp/splunktmp.deb";

  processes:
      "splunkd" restart_class => "splunk_start";

  files:

    !abort_configure.splunk_installed::
      "$(splunk_root)/etc/system/local/inputs.conf"
      perms => mog("600", "root", "root"),
      classes => context_yesnorepaired("splunk"),
      create => "true",
      edit_defaults => empty,
      edit_line => expand_template("$(bundle_home)/$(inputs)");

    !servermode.!abort_configure.splunk_installed::
      "$(splunk_root)/etc/system/local/outputs.conf"
      perms => mog("600", "root", "root"),
      classes => context_yesnorepaired("splunk"),
      create => "true",
      edit_defaults => empty,
      edit_line => expand_template("$(bundle_home)/$(outputs)");

    servermode.!abort_configure.splunk_installed::
      "$(splunk_root)/etc/system/local/outputs.conf"
      perms => mog("600", "root", "root"),
      classes => context_yesnorepaired("splunk"),
      create => "true",
      edit_defaults => empty;

  commands:
    !splunk_installed.redhat::
      "rpm -i $(packageurl)";

    !splunk_installed.(debian||ubuntu)::
      "/usr/bin/wget '$(packageurl)' -qO $(deb_temp_pkg)";

    !splunk_installed.(debian||ubuntu).package_downloaded::
      "/usr/bin/dpkg -i $(deb_temp_pkg)";

    splunk_installed.splunk_start.splunk_configured::
      "$(splunk_control) start $(splunk_options)";

    !abort_configure.splunk_installed.!splunk_configured::
      "$(splunk_control) edit user admin -password $(password) -role admin -auth admin:changeme $(splunk_options)";
      # broken, we'll deploy outputs.conf manually
      # "/usr/bin/curl -k -u admin:$(password) https://localhost:8089/services/data/outputs/tcp/group -d name=lan_receivers -d method=autobalance -d compressed=1 -d servers=mysplunkserver:8997";
#$(splunk_control) add forward-server mysplunkserver -auth admin:$(password)
      # broken, we'll deploy inputs.conf manually 
      # "$(splunk_control) add monitor /var/log";

    !abort_configure.splunk_installed.!splunk_boot_enabled::
      "$(splunk_control) enable boot-start";

    !abort_configure.splunk_repaired::
      "$(splunk_control) restart $(splunk_options)";

  reports:
    abort_configure::
      "Your Splunk install seems to be confused, you have both server and forwarder installed.  Aborting.";

    !splunk_installed::
      "You should install Splunk.";
}

body classes context_yesnorepaired(x)

# Define a class from a prefix x concatenated with yes/no/repaired depending on the outcome of the promise

{
  promise_repaired => { "$(x)_repaired" };
  promise_kept     => { "$(x)_yes"     };
  repair_failed    => { "$(x)_no"   };
  repair_denied    => { "$(x)_no"   };
  repair_timeout   => { "$(x)_no"  };
}

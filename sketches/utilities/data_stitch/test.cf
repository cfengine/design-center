body common control
{
      bundlesequence => { cfsketch_g, cfsketch_run };
      inputs => { @(cfsketch_g.inputs) };
}


# environment common bundles


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "../../libraries/dclib-3.5.0/library.cf", "../../libraries/dclib/library.cf", "../../libraries/copbl/cfengine_stdlib.cf", "main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'pieces' from definition parameter definition from /home/tzz/source/design-center/tools/test/../../sketches/utilities/data_stitch/params/demo.json-1, activation ___001_Data_Stitch_cfdc_stitch
      "___001_Data_Stitch_cfdc_stitch_pieces[000000]" string => "any::everywhere line";
      "___001_Data_Stitch_cfdc_stitch_pieces[000001]" string => "linux::linux line";
      "___001_Data_Stitch_cfdc_stitch_pieces[000002]" string => "!linux::no linux line";
      "___001_Data_Stitch_cfdc_stitch_pieces[000003]" string => "";

      # array 'pieces' from definition parameter definition from /home/tzz/source/design-center/tools/test/../../sketches/utilities/data_stitch/params/demo.json-2, activation ___002_Data_Stitch_cfdc_stitch
      "___002_Data_Stitch_cfdc_stitch_pieces[000000]" string => "??? invalid context::nowhere line";
      "___002_Data_Stitch_cfdc_stitch_pieces[000001]" string => "any::everywhere line
another line for everywhere::I mean everywhere!";
      "___002_Data_Stitch_cfdc_stitch_pieces[000002]" string => "linux::linux line";
      "___002_Data_Stitch_cfdc_stitch_pieces[000003]" string => "";

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";

    any::
      "___001_Data_Stitch_cfdc_stitch" usebundle => cfdc_stitch("badfilesname", "default:cfsketch_run.___001_Data_Stitch_cfdc_stitch_pieces"), ifvarclass => "any", useresult => "return____001_Data_Stitch_cfdc_stitch";
    any::
      "___002_Data_Stitch_cfdc_stitch" usebundle => cfdc_stitch("/tmp/stitched.txt", "default:cfsketch_run.___002_Data_Stitch_cfdc_stitch_pieces"), ifvarclass => "any", useresult => "return____002_Data_Stitch_cfdc_stitch";

  reports:
    inform_mode::
      "activation ___001_Data_Stitch_cfdc_stitch returned built = $(return____001_Data_Stitch_cfdc_stitch[built])";
      "activation ___001_Data_Stitch_cfdc_stitch could not run because it requires classes any" ifvarclass => "inform_mode.!(any)";
      "activation ___002_Data_Stitch_cfdc_stitch returned built = $(return____002_Data_Stitch_cfdc_stitch[built])";
      "activation ___002_Data_Stitch_cfdc_stitch could not run because it requires classes any" ifvarclass => "inform_mode.!(any)";
}

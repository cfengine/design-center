body common control
{
      bundlesequence => { cfsketch_g, cfsketch_run };
      inputs => { @(cfsketch_g.inputs) };
}


# environment common bundles

# environment cf_sketch_testing
bundle common cf_sketch_testing
{
  vars:
      "activated" string => "1";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "1";
      "verbose" string => "1";
  classes:
      "runenv_cf_sketch_testing_activated" expression => "any";
      "runenv_cf_sketch_testing_test" expression => "any";
      "runenv_cf_sketch_testing_verbose" expression => "any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "../../libraries/dclib/library.cf", "../../libraries/copbl/cfengine_stdlib.cf", "../cloud_common/library.cf", "main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'mymetadata' from definition sketch metadata, activation __001_Cloud_Services_AWS_SDB_sync
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[authors]" slist => { "Ted Zlatanov <tzz@lifelogs.com>" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib", "Cloud::Services::Common" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[license]" string => "MIT";
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[location]" string => "/home/tzz/.cfagent/inputs/sketches/cloud/aws_sdb";
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[manifest_cf]" slist => { "main.cf" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[manifest_docs]" slist => { "README.md" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[manifest_exe]" slist => { "cf_null" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[manifest_extra]" slist => { "params/demo.json" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[name]" string => "Cloud::Services::AWS::SDB";
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[tags]" slist => { "cfdc" };
      "__001_Cloud_Services_AWS_SDB_sync_mymetadata[version]" string => "1";

      # array 'options' from definition /home/tzz/source/design-center/tools/test/../../sketches/cloud/aws_sdb/params/demo.json 1, activation __001_Cloud_Services_AWS_SDB_sync
      "__001_Cloud_Services_AWS_SDB_sync_options[netrc]" string => "/home/tzz/.netrc";

      # array 'mymetadata' from definition sketch metadata, activation __002_Cloud_Services_AWS_SDB_clear
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[authors]" slist => { "Ted Zlatanov <tzz@lifelogs.com>" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib", "Cloud::Services::Common" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[license]" string => "MIT";
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[location]" string => "/home/tzz/.cfagent/inputs/sketches/cloud/aws_sdb";
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[manifest_cf]" slist => { "main.cf" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[manifest_docs]" slist => { "README.md" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[manifest_exe]" slist => { "cf_null" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[manifest_extra]" slist => { "params/demo.json" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[name]" string => "Cloud::Services::AWS::SDB";
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[tags]" slist => { "cfdc" };
      "__002_Cloud_Services_AWS_SDB_clear_mymetadata[version]" string => "1";

      # array 'options' from definition /home/tzz/source/design-center/tools/test/../../sketches/cloud/aws_sdb/params/demo.json 2, activation __002_Cloud_Services_AWS_SDB_clear
      "__002_Cloud_Services_AWS_SDB_clear_options[netrc]" string => "/home/tzz/.netrc";

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "cf_sketch_testing" usebundle => "cf_sketch_testing";

    runenv_cf_sketch_testing_activated::
      "__001_Cloud_Services_AWS_SDB_sync" usebundle => cfdc_aws_sdb:sync("cf_sketch_testing", "default:cfsketch_run.__001_Cloud_Services_AWS_SDB_sync_mymetadata", "/tmp/sdb.json", "cfsketch_sdb_cloud", "default:cfsketch_run.__001_Cloud_Services_AWS_SDB_sync_options"), useresult => "return___001_Cloud_Services_AWS_SDB_sync";
    runenv_cf_sketch_testing_activated::
      "__002_Cloud_Services_AWS_SDB_clear" usebundle => cfdc_aws_sdb:clear("cf_sketch_testing", "default:cfsketch_run.__002_Cloud_Services_AWS_SDB_clear_mymetadata", "cfsketch_sdb_cloud", "default:cfsketch_run.__002_Cloud_Services_AWS_SDB_clear_options"), useresult => "return___002_Cloud_Services_AWS_SDB_clear";

  reports:
    cfengine::

}

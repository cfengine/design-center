body file control
{
  namespace => "cfdc_applications_memcached";
}

bundle agent applications_memcached(runenv,metadata,port,user,maxconn,cachesize,listen) {

	methods:
		"MEMCACHED INSTALL $(runenv)" 
			usebundle => applications_memcached_install,
			useresult => "install_return";

		"MEMCACHED CONFIGURE $(runenv)"
			usebundle => applications_memcached_conf("$(runenv)","$(metadata)","$(install_return[package_status])","$(port)","$(user)","$(maxconn)","$(cachesize)","$(listen)"),
			useresult => "config_return";

		"MEMCACHED PROCESS $(runenv)"
			usebundle => applications_memcached_proc("$(config_return[service_mode])");
}

bundle agent applications_memcached_install
{
	packages:
		redhat|centos|fedora::
			"memcached"
				package_policy => "add",
				classes => default:if_ok("applications_memcached_installed"),
				package_method => default:yum;
		ubuntu|debian::
			"memcached"
				package_policy => "add",
				classes => default:if_ok("applications_memcached_installed"),
				package_method => default:apt;

	reports:
		applications_memcached_installed::
			"installed" bundle_return_value_index => "package_status";
		!applications_memcached_installed::
			"not_installed" bundle_return_value_index => "package_status";
}

bundle agent applications_memcached_conf(runenv,metadata,pkg_status,port,user,maxconn,cachesize,listen)
{
	classes:
		"memcached_installed" expression => strcmp("installed", "$(pkg_status)");

  files:
		memcached_installed.(redhat|centos)::
			"/etc/sysconfig/memcached"
				create => "true",
				edit_defaults => default:empty,
				perms => default:m("644"),
				classes => default:if_repaired("applications_memcached_config_repaired"),
				edit_line => application_memcached_redhat_insert_lines("$(port)","$(user)","$(maxconn)","$(cachesize)","$(listen)");
		memcached_installed.(ubuntu|debian)::
			"/etc/memcached.conf"
				create => "true",
				edit_defaults => default:empty,
				perms => default:m("644"),
				classes => default:if_repaired("applications_memcached_config_repaired"),
				edit_line => application_memcached_debian_insert_lines("$(port)","$(user)","$(maxconn)","$(cachesize)","$(listen)");
			"/etc/default/memcached"
				create => "true",
				classes => default:if_repaired("applications_memcached_config_repaired"),
				edit_defaults => default:empty,
				edit_line => default:insert_lines("ENABLE_MEMCACHED=yes");

	reports:
		applications_memcached_config_repaired::
			"restart" bundle_return_value_index => "service_mode";
		!applications_memcached_config_repaired::
			"start" bundle_return_value_index => "service_mode";
}

bundle agent applications_memcached_proc(service_mode)
{
	classes:
		"applications_memcached_conf_repaired" expression => strcmp("restart","$(service_mode)");
	
	processes:
		!applications_memcached_conf_repaired::
			"memcached"
				restart_class => "applications_memcached_proc_start";

	commands:
		applications_memcached_conf_repaired::
			"/etc/init.d/memcached restart";
		applications_memcached_proc_start::
			"/etc/init.d/memcached start";
}

bundle edit_line application_memcached_debian_insert_lines(port,user,maxconn,cachesize,listen) {
	insert_lines:
"#
# Configured by CFEngine. Local changes will be lost.
#
# memcached default config file
# 2003 - Jay Bonci <jaybonci@debian.org>
# This configuration file is read by the start-memcached script provided as
# part of the Debian GNU/Linux distribution.

# Run memcached as a daemon. This command is implied, and is not needed for the
# daemon to run. See the README.Debian that comes with this package for more
# information.
-d

# Log memcached's output to /var/log/memcached
logfile /var/log/memcached.log

# Be verbose
-v

# Be even more verbose (print client commands as well)
# -vv

# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default
# Note that the daemon will grow to this size, but does not start out holding this much
# memory
-m $(cachesize)

# Default connection port is 11211
-p $(port)

# Run the daemon as root. The start-memcached will default to running as root if no
# -u command is present in this config file
-u $(user)

# Specify which IP address to listen on. The default is to listen on all IP addresses
# This parameter is one of the only security measures that memcached has, so make sure
# it's listening on a firewalled interface.
-l $(listen)

# Limit the number of simultaneous incoming connections. The daemon default is 1024
-c $(maxconn)

# Lock down all paged memory. Consult with the README and homepage before you do this
# -k

# Return error when memory is exhausted (rather than removing items)
# -M

# Maximize core file limit
# -r";
}

bundle edit_line application_memcached_redhat_insert_lines(port,user,maxconn,cachesize,listen) {
	insert_lines:
"PORT=\"$(port)\"
USER=\"$(user)\"
MAXCONN=\"$(maxconn)\"
CACHESIZE=\"$(cachesize)\"
OPTIONS=\"-l $(listen)\"";
}

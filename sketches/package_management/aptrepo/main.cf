bundle agent cfdc_configure_apt_sources_list(prefix) {
# Used for enforcing the complete contents of /etc/apt/sources.list.d/*.list

  vars:
      "canon_prefix" 
          string  => canonify("$(prefix)");
      # default file to edit
      "apt_sources_list_default_file" 
          string  => "/etc/apt/sources.list";

      "apt_sources_list" 
          slist   => getindices("$(prefix)repos"),
          comment => "We need the list of repo to look for in the sources.list.d directory";
      "canon_apt_sources_list[$(apt_sources_list)]"
          string  => canonify("$(apt_sources_list)");
      "contexts"     
          slist   => getindices("$(prefix)default_values");

      "repo_type"    
          slist   => { "deb-src", "deb", };
      "canon_repo_type[$(repo_type)]"
          string  => canonify("$(repo_type)");

      # choice between, deb, deb-src or both
      "apt_sources_list_repo_type[$(apt_sources_list)][repo_type][$(repo_type)]" 
          string  => "$($(prefix)repos[$(apt_sources_list)][repo_type][$(repo_type)])";
      # examples in debian : main or contrib
      "apt_sources_list_section[$(apt_sources_list)]" 
          string  => "$($(prefix)repos[$(apt_sources_list)][section])";
      # examples in debian : http.us.debian.org
      "apt_sources_list_repo_url[$(apt_sources_list)]" 
          string  => "$($(prefix)repos[$(apt_sources_list)][repo_url])";

      # 
      "apt_sources_list_distrib[$(apt_sources_list)]" 
          string  => "$($(prefix)repos[$(apt_sources_list)][distrib])";
      "apt_sources_list_version_distrib[$(apt_sources_list)]" 
          string  => "$($(prefix)repos[$(apt_sources_list)][version_distrib])";

      "CFEnotice" 
          string  => "# This file is managed by CFEngine, manual edits will be reverted",
          comment => "It's nice to let people know why the file keep magically reverting on them";

  classes:
      "only_allow_defined_entries" 
          expression => regcmp("(?i)yes|true", "$($(prefix)defined_only)");
      "multiple_sources_list_files" 
          expression => regcmp("(?i)yes|true", "$($(prefix)multiple_sources_list_files)");
      "apt_sources_list_repo_type_$(canon_apt_sources_list[$(apt_sources_list)])_$(canon_repo_type[$(repo_type)])_active_repo" 
          expression => regcmp("(?i)yes|true", "$(apt_sources_list_repo_type[$(apt_sources_list)][repo_type][$(repo_type)])" );
      "apt_sources_list_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])" 
          expression => isvariable("$(prefix)repos[$(apt_sources_list)][distrib]");
      "apt_sources_list_version_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])" 
          expression => isvariable("$(prefix)repos[$(apt_sources_list)][version_distrib]");

  methods:
      "default_vars" usebundle  => asl_vars("$(prefix)", "$(contexts)"),
                     classes    => always("$(contexts)_vars_determined"),
                     ifvarclass => "$(contexts).!$(contexts)_vars_determined";

  files:
        "$(asl_vars.apt_sources_list_file[$(apt_sources_list)])" 
          create        =>  "true",
          edit_defaults =>  cfdc_configure_apt_sources_list_empty_if_ask,
          edit_line     =>  cfdc_configure_apt_sources_list_prepend_if_no_line("$(CFEnotice)"),
          ifvarclass    =>  "$(contexts)_vars_determined",
          comment       =>  "Create $(apt_sources_list_file[$(apt_sources_list)]) and notice that the file is managed by CFEngine";

        "$(asl_vars.apt_sources_list_file[$(apt_sources_list)])" 
          edit_defaults =>  std_defs,
          edit_line     =>  append_if_no_line("$(repo_type) http://$(apt_sources_list_repo_url[$(apt_sources_list)])/$(apt_sources_list_distrib[$(apt_sources_list)])/ $(apt_sources_list_version_distrib[$(apt_sources_list)]) $(apt_sources_list_section[$(apt_sources_list)])"),
          ifvarclass    =>  and("$(contexts)_vars_determined",
                                "apt_sources_list_repo_type_$(canon_apt_sources_list[$(apt_sources_list)])_$(canon_repo_type[$(repo_type)])_active_repo",
                                "apt_sources_list_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])",
                                "apt_sources_list_version_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])"
                             ),
          comment       =>  "Complete or fix $(apt_sources_list_file[$(apt_sources_list)]) with distrib and version_distrib defined.";

        "$(asl_vars.apt_sources_list_file[$(apt_sources_list)])" 
          edit_defaults =>  std_defs,
          edit_line     =>  append_if_no_line("$(repo_type) http://$(apt_sources_list_repo_url[$(apt_sources_list)])/$(asl_vars.conf[distrib])/ $(apt_sources_list_version_distrib[$(apt_sources_list)]) $(apt_sources_list_section[$(apt_sources_list)])"),
          ifvarclass    =>  and("$(contexts)_vars_determined",
                                "apt_sources_list_repo_type_$(canon_apt_sources_list[$(apt_sources_list)])_$(canon_repo_type[$(repo_type)])_active_repo",
                                not("apt_sources_list_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])"),
                                "apt_sources_list_version_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])"
                             ),
          comment       =>  "Complete or fix $(apt_sources_list_file[$(apt_sources_list)]) with distrib not defined and version_distrib defined.";

        "$(asl_vars.apt_sources_list_file[$(apt_sources_list)])" 
          edit_defaults =>  std_defs,
          edit_line     =>  append_if_no_line("$(repo_type) http://$(apt_sources_list_repo_url[$(apt_sources_list)])/$(apt_sources_list_distrib[$(apt_sources_list)])/ $(asl_vars.conf[version_distrib]) $(apt_sources_list_section[$(apt_sources_list)])"),
          ifvarclass    =>  and("$(contexts)_vars_determined",
                                "apt_sources_list_repo_type_$(canon_apt_sources_list[$(apt_sources_list)])_$(canon_repo_type[$(repo_type)])_active_repo",
                                "apt_sources_list_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])",
                                not("apt_sources_list_version_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])")
                             ),
          comment       =>  "Complete or fix $(apt_sources_list_file[$(apt_sources_list)]) with distrib defined and version_distrib not defined.";

        "$(asl_vars.apt_sources_list_file[$(apt_sources_list)])" 
          edit_defaults =>  std_defs,
          edit_line     =>  append_if_no_line("$(repo_type) http://$(apt_sources_list_repo_url[$(apt_sources_list)])/$(asl_vars.conf[distrib])/ $(asl_vars.conf[version_distrib]) $(apt_sources_list_section[$(apt_sources_list)])"),
          ifvarclass    =>  and("$(contexts)_vars_determined",
                                "apt_sources_list_repo_type_$(canon_apt_sources_list[$(apt_sources_list)])_$(canon_repo_type[$(repo_type)])_active_repo",
                                not("apt_sources_list_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])"),
                                not("apt_sources_list_version_distrib_defined_$(canon_apt_sources_list[$(apt_sources_list)])")
                             ),
          comment       =>  "Complete or fix $(apt_sources_list_file[$(apt_sources_list)]) with distrib and version_distrib not defined.";

  reports:
    debug::
      "main     @@ Generate multiple files : $($(prefix)multiple_sources_list_files) @@ $(asl_vars.apt_sources_list_file[$(apt_sources_list)])";
      "main     @@ $(apt_sources_list) @@ file $(asl_vars.apt_sources_list_file[$(apt_sources_list)]) @@ $(repo_type) http://$(apt_sources_list_repo_url[$(apt_sources_list)])/$(apt_sources_list_distrib[$(apt_sources_list)])/ $(apt_sources_list_version_distrib[$(apt_sources_list)]) $(apt_sources_list_section[$(apt_sources_list)])";
}

bundle agent meta_cfdc_configure_apt_sources_list
{
  vars:
      "argument[repos]"                       string => "array";
      "argument[defined_only]"                string => "string",
        comment => "Must be true or yes to activate";
      "argument[multiple_sources_list_files]" string => "string",
        comment => "Must be true or yes to activate, if not activated, all the configuration will be in $(sources_list_file) ";
      "argument[default_values]"                   string => "array";
}

bundle edit_line cfdc_configure_apt_sources_list_prepend_if_no_line(string) {
  insert_lines:
      "$(string)" 
         location => start,
         comment => "Prepend a line to the file if it doesn't already exist";
}

body edit_defaults cfdc_configure_apt_sources_list_empty_if_ask
{
    edit_backup => "false";
    max_file_size => "300000";
  !only_allow_defined_entries::
    empty_file_before_editing => "false";
  only_allow_defined_entries::
    empty_file_before_editing => "true";
}

bundle agent asl_vars(prefix, context)
{
  classes:
      "multiple_sources_list_files" 
          expression => regcmp("(?i)yes|true", "$($(prefix)multiple_sources_list_files)");
      "unique_sources_list_files" 
          not        => regcmp("(?i)yes|true", "$($(prefix)multiple_sources_list_files)");
  vars:
      "apt_sources_list" 
            slist   => getindices("$(prefix)repos"),
            comment => "We need the list of repo to look for in the sources.list.d directory";
      "conf[distrib]"          string => "$($(prefix)default_values[$(context)][distrib])";
      "conf[version_distrib]"  string => "$($(prefix)default_values[$(context)][version_distrib])";
      unique_sources_list_files::
      # file to edit
      "apt_sources_list_file[$(apt_sources_list)]" 
            string  => "/etc/apt/sources.list";
      multiple_sources_list_files::
      # file to edit
      "apt_sources_list_file[$(apt_sources_list)]" 
            string  => "$($(prefix)repos[$(apt_sources_list)][file])";

  reports:
    debug::
      "asl_vars @@ $(prefix) @@ $(context)";
      "@@ $(conf[distrib]) @@ $(conf[version_distrib]) @@ $(apt_sources_list) @@ $(asl_vars.apt_sources_list_file[$(apt_sources_list)])";
}


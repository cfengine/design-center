body common control
{
      bundlesequence => { "cfsketch_run" };
      #inputs => { "../../libraries/copbl/cfengine_stdlib.cf", "./main.cf" };
      inputs => { "../../libraries/dclib/library.cf", "/var/cfengine/share/CoreBase/libraries/cfengine_stdlib.cf", "./main.cf" };
}

bundle common cf_sketch_testing
{
  vars:
      "test" string => "1";
      "verbose" string => "1";
      "inform" string => "1";

      "env_vars" slist => { "test", "verbose", "inform" };
  
  classes:
      "runenv_$(this.bundle)_test" expression => "any"; 
      "runenv_$(this.bundle)_verbose" expression => "any"; 
      "runenv_$(this.bundle)_inform" expression => "any"; 
}

bundle common cfsketch_g
{
  vars:
    "path" string => "/srv/yum_repo";

}

bundle agent cfsketch_run
{
  methods:
      "cfsketch_g" usebundle => "cfsketch_g";
      "test"
        useresult => "my_return_value",
        usebundle => cfdc_yumrepo_3_0:manage_metadata( "cf_sketch_testing",
                                                       "metadata",
                                                       "$(cfsketch_g.path)",
                                                       "root",
                                                       "root");

  reports:
    cfengine::
      "returned $(my_return_value[return_code]):$(my_return_value[status])";

}

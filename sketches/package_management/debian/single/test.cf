body common control
{
      bundlesequence => { cfsketch_g, cfsketch_run };
      inputs => { @(cfsketch_g.inputs) };
}


# environment common bundles

# environment cf_sketch_testing
bundle common cf_sketch_testing
{
  vars:
      "activated" string => "1";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "1";
      "verbose" string => "1";
  classes:
      "runenv_cf_sketch_testing_activated" expression => "any";
      "runenv_cf_sketch_testing_test" expression => "any";
      "runenv_cf_sketch_testing_verbose" expression => "any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "../../../libraries/dclib/library.cf", "../../../libraries/copbl/cfengine_stdlib.cf", "main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'metadata' from definition sketch metadata, activation ___001_Packages_Debian_single_install
      "___001_Packages_Debian_single_install_metadata[api][install][type]" string => "boolean";
      "___001_Packages_Debian_single_install_metadata[api][metadata][type]" string => "metadata";
      "___001_Packages_Debian_single_install_metadata[api][package][type]" string => "string";
      "___001_Packages_Debian_single_install_metadata[api][package_installed][type]" string => "return";
      "___001_Packages_Debian_single_install_metadata[api][prefix][type]" string => "string";
      "___001_Packages_Debian_single_install_metadata[api][release][type]" string => "string";
      "___001_Packages_Debian_single_install_metadata[api][runenv][type]" string => "environment";
      "___001_Packages_Debian_single_install_metadata[api][version][type]" string => "string";
      "___001_Packages_Debian_single_install_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___001_Packages_Debian_single_install_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___001_Packages_Debian_single_install_metadata[license]" string => "MIT";
      "___001_Packages_Debian_single_install_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___001_Packages_Debian_single_install_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___001_Packages_Debian_single_install_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___001_Packages_Debian_single_install_metadata[manifest_docs]" slist => { "README.md" };
      "___001_Packages_Debian_single_install_metadata[manifest_exe]" slist => { "cf_null" };
      "___001_Packages_Debian_single_install_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___001_Packages_Debian_single_install_metadata[manifest_test]" slist => { "test.pl" };
      "___001_Packages_Debian_single_install_metadata[name]" string => "Packages::Debian::single";
      "___001_Packages_Debian_single_install_metadata[tags]" slist => { "cfdc" };
      "___001_Packages_Debian_single_install_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___002_Packages_Debian_single_install
      "___002_Packages_Debian_single_install_metadata[api][install][type]" string => "boolean";
      "___002_Packages_Debian_single_install_metadata[api][metadata][type]" string => "metadata";
      "___002_Packages_Debian_single_install_metadata[api][package][type]" string => "string";
      "___002_Packages_Debian_single_install_metadata[api][package_installed][type]" string => "return";
      "___002_Packages_Debian_single_install_metadata[api][prefix][type]" string => "string";
      "___002_Packages_Debian_single_install_metadata[api][release][type]" string => "string";
      "___002_Packages_Debian_single_install_metadata[api][runenv][type]" string => "environment";
      "___002_Packages_Debian_single_install_metadata[api][version][type]" string => "string";
      "___002_Packages_Debian_single_install_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___002_Packages_Debian_single_install_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___002_Packages_Debian_single_install_metadata[license]" string => "MIT";
      "___002_Packages_Debian_single_install_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___002_Packages_Debian_single_install_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___002_Packages_Debian_single_install_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___002_Packages_Debian_single_install_metadata[manifest_docs]" slist => { "README.md" };
      "___002_Packages_Debian_single_install_metadata[manifest_exe]" slist => { "cf_null" };
      "___002_Packages_Debian_single_install_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___002_Packages_Debian_single_install_metadata[manifest_test]" slist => { "test.pl" };
      "___002_Packages_Debian_single_install_metadata[name]" string => "Packages::Debian::single";
      "___002_Packages_Debian_single_install_metadata[tags]" slist => { "cfdc" };
      "___002_Packages_Debian_single_install_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___003_Packages_Debian_single_install
      "___003_Packages_Debian_single_install_metadata[api][install][type]" string => "boolean";
      "___003_Packages_Debian_single_install_metadata[api][metadata][type]" string => "metadata";
      "___003_Packages_Debian_single_install_metadata[api][package][type]" string => "string";
      "___003_Packages_Debian_single_install_metadata[api][package_installed][type]" string => "return";
      "___003_Packages_Debian_single_install_metadata[api][prefix][type]" string => "string";
      "___003_Packages_Debian_single_install_metadata[api][release][type]" string => "string";
      "___003_Packages_Debian_single_install_metadata[api][runenv][type]" string => "environment";
      "___003_Packages_Debian_single_install_metadata[api][version][type]" string => "string";
      "___003_Packages_Debian_single_install_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___003_Packages_Debian_single_install_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___003_Packages_Debian_single_install_metadata[license]" string => "MIT";
      "___003_Packages_Debian_single_install_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___003_Packages_Debian_single_install_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___003_Packages_Debian_single_install_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___003_Packages_Debian_single_install_metadata[manifest_docs]" slist => { "README.md" };
      "___003_Packages_Debian_single_install_metadata[manifest_exe]" slist => { "cf_null" };
      "___003_Packages_Debian_single_install_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___003_Packages_Debian_single_install_metadata[manifest_test]" slist => { "test.pl" };
      "___003_Packages_Debian_single_install_metadata[name]" string => "Packages::Debian::single";
      "___003_Packages_Debian_single_install_metadata[tags]" slist => { "cfdc" };
      "___003_Packages_Debian_single_install_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___004_Packages_Debian_single_install
      "___004_Packages_Debian_single_install_metadata[api][install][type]" string => "boolean";
      "___004_Packages_Debian_single_install_metadata[api][metadata][type]" string => "metadata";
      "___004_Packages_Debian_single_install_metadata[api][package][type]" string => "string";
      "___004_Packages_Debian_single_install_metadata[api][package_installed][type]" string => "return";
      "___004_Packages_Debian_single_install_metadata[api][prefix][type]" string => "string";
      "___004_Packages_Debian_single_install_metadata[api][release][type]" string => "string";
      "___004_Packages_Debian_single_install_metadata[api][runenv][type]" string => "environment";
      "___004_Packages_Debian_single_install_metadata[api][version][type]" string => "string";
      "___004_Packages_Debian_single_install_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___004_Packages_Debian_single_install_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___004_Packages_Debian_single_install_metadata[license]" string => "MIT";
      "___004_Packages_Debian_single_install_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___004_Packages_Debian_single_install_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___004_Packages_Debian_single_install_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___004_Packages_Debian_single_install_metadata[manifest_docs]" slist => { "README.md" };
      "___004_Packages_Debian_single_install_metadata[manifest_exe]" slist => { "cf_null" };
      "___004_Packages_Debian_single_install_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___004_Packages_Debian_single_install_metadata[manifest_test]" slist => { "test.pl" };
      "___004_Packages_Debian_single_install_metadata[name]" string => "Packages::Debian::single";
      "___004_Packages_Debian_single_install_metadata[tags]" slist => { "cfdc" };
      "___004_Packages_Debian_single_install_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___005_Packages_Debian_single_verify
      "___005_Packages_Debian_single_verify_metadata[api][metadata][type]" string => "metadata";
      "___005_Packages_Debian_single_verify_metadata[api][package][type]" string => "string";
      "___005_Packages_Debian_single_verify_metadata[api][package_verified][type]" string => "return";
      "___005_Packages_Debian_single_verify_metadata[api][prefix][type]" string => "string";
      "___005_Packages_Debian_single_verify_metadata[api][runenv][type]" string => "environment";
      "___005_Packages_Debian_single_verify_metadata[api][verify][type]" string => "boolean";
      "___005_Packages_Debian_single_verify_metadata[api][version][type]" string => "string";
      "___005_Packages_Debian_single_verify_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___005_Packages_Debian_single_verify_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___005_Packages_Debian_single_verify_metadata[license]" string => "MIT";
      "___005_Packages_Debian_single_verify_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___005_Packages_Debian_single_verify_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___005_Packages_Debian_single_verify_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___005_Packages_Debian_single_verify_metadata[manifest_docs]" slist => { "README.md" };
      "___005_Packages_Debian_single_verify_metadata[manifest_exe]" slist => { "cf_null" };
      "___005_Packages_Debian_single_verify_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___005_Packages_Debian_single_verify_metadata[manifest_test]" slist => { "test.pl" };
      "___005_Packages_Debian_single_verify_metadata[name]" string => "Packages::Debian::single";
      "___005_Packages_Debian_single_verify_metadata[tags]" slist => { "cfdc" };
      "___005_Packages_Debian_single_verify_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___006_Packages_Debian_single_verify
      "___006_Packages_Debian_single_verify_metadata[api][metadata][type]" string => "metadata";
      "___006_Packages_Debian_single_verify_metadata[api][package][type]" string => "string";
      "___006_Packages_Debian_single_verify_metadata[api][package_verified][type]" string => "return";
      "___006_Packages_Debian_single_verify_metadata[api][prefix][type]" string => "string";
      "___006_Packages_Debian_single_verify_metadata[api][runenv][type]" string => "environment";
      "___006_Packages_Debian_single_verify_metadata[api][verify][type]" string => "boolean";
      "___006_Packages_Debian_single_verify_metadata[api][version][type]" string => "string";
      "___006_Packages_Debian_single_verify_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___006_Packages_Debian_single_verify_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___006_Packages_Debian_single_verify_metadata[license]" string => "MIT";
      "___006_Packages_Debian_single_verify_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___006_Packages_Debian_single_verify_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___006_Packages_Debian_single_verify_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___006_Packages_Debian_single_verify_metadata[manifest_docs]" slist => { "README.md" };
      "___006_Packages_Debian_single_verify_metadata[manifest_exe]" slist => { "cf_null" };
      "___006_Packages_Debian_single_verify_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___006_Packages_Debian_single_verify_metadata[manifest_test]" slist => { "test.pl" };
      "___006_Packages_Debian_single_verify_metadata[name]" string => "Packages::Debian::single";
      "___006_Packages_Debian_single_verify_metadata[tags]" slist => { "cfdc" };
      "___006_Packages_Debian_single_verify_metadata[version]" string => "1.0.0";

      # array 'metadata' from definition sketch metadata, activation ___007_Packages_Debian_single_remove
      "___007_Packages_Debian_single_remove_metadata[api][metadata][type]" string => "metadata";
      "___007_Packages_Debian_single_remove_metadata[api][package][type]" string => "string";
      "___007_Packages_Debian_single_remove_metadata[api][package_removed][type]" string => "return";
      "___007_Packages_Debian_single_remove_metadata[api][prefix][type]" string => "string";
      "___007_Packages_Debian_single_remove_metadata[api][remove][type]" string => "boolean";
      "___007_Packages_Debian_single_remove_metadata[api][runenv][type]" string => "environment";
      "___007_Packages_Debian_single_remove_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>" };
      "___007_Packages_Debian_single_remove_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___007_Packages_Debian_single_remove_metadata[license]" string => "MIT";
      "___007_Packages_Debian_single_remove_metadata[location]" string => "/home/bheilman/.cfagent/inputs/sketches/package_management/debian/single";
      "___007_Packages_Debian_single_remove_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "___007_Packages_Debian_single_remove_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___007_Packages_Debian_single_remove_metadata[manifest_docs]" slist => { "README.md" };
      "___007_Packages_Debian_single_remove_metadata[manifest_exe]" slist => { "cf_null" };
      "___007_Packages_Debian_single_remove_metadata[manifest_extra]" slist => { "params/demo.json" };
      "___007_Packages_Debian_single_remove_metadata[manifest_test]" slist => { "test.pl" };
      "___007_Packages_Debian_single_remove_metadata[name]" string => "Packages::Debian::single";
      "___007_Packages_Debian_single_remove_metadata[tags]" slist => { "cfdc" };
      "___007_Packages_Debian_single_remove_metadata[version]" string => "1.0.0";

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "cf_sketch_testing" usebundle => "cf_sketch_testing";

    runenv_cf_sketch_testing_activated::
      "___001_Packages_Debian_single_install" usebundle => cfdc_packages_debian_single:install("cf_sketch_testing", "default:cfsketch_run.___001_Packages_Debian_single_install_metadata", "___001_Packages_Debian_single_install", "1", "install_package_1", "version_1", "release_1"), ifvarclass => "debian", useresult => "return____001_Packages_Debian_single_install";
    runenv_cf_sketch_testing_activated::
      "___002_Packages_Debian_single_install" usebundle => cfdc_packages_debian_single:install("cf_sketch_testing", "default:cfsketch_run.___002_Packages_Debian_single_install_metadata", "___002_Packages_Debian_single_install", "1", "install_package_2", "version_2", ""), ifvarclass => "debian", useresult => "return____002_Packages_Debian_single_install";
    runenv_cf_sketch_testing_activated::
      "___003_Packages_Debian_single_install" usebundle => cfdc_packages_debian_single:install("cf_sketch_testing", "default:cfsketch_run.___003_Packages_Debian_single_install_metadata", "___003_Packages_Debian_single_install", "1", "install_package_3", "", "release_3"), ifvarclass => "debian", useresult => "return____003_Packages_Debian_single_install";
    runenv_cf_sketch_testing_activated::
      "___004_Packages_Debian_single_install" usebundle => cfdc_packages_debian_single:install("cf_sketch_testing", "default:cfsketch_run.___004_Packages_Debian_single_install_metadata", "___004_Packages_Debian_single_install", "1", "install_package_4", "", ""), ifvarclass => "debian", useresult => "return____004_Packages_Debian_single_install";
    runenv_cf_sketch_testing_activated::
      "___005_Packages_Debian_single_verify" usebundle => cfdc_packages_debian_single:verify("cf_sketch_testing", "default:cfsketch_run.___005_Packages_Debian_single_verify_metadata", "___005_Packages_Debian_single_verify", "1", "verify_package_1", "version_1"), ifvarclass => "debian", useresult => "return____005_Packages_Debian_single_verify";
    runenv_cf_sketch_testing_activated::
      "___006_Packages_Debian_single_verify" usebundle => cfdc_packages_debian_single:verify("cf_sketch_testing", "default:cfsketch_run.___006_Packages_Debian_single_verify_metadata", "___006_Packages_Debian_single_verify", "1", "verify_package_2", ""), ifvarclass => "debian", useresult => "return____006_Packages_Debian_single_verify";
    runenv_cf_sketch_testing_activated::
      "___007_Packages_Debian_single_remove" usebundle => cfdc_packages_debian_single:remove("cf_sketch_testing", "default:cfsketch_run.___007_Packages_Debian_single_remove_metadata", "___007_Packages_Debian_single_remove", "1", "remove_package_1"), ifvarclass => "debian", useresult => "return____007_Packages_Debian_single_remove";

  reports:
    inform_mode::
      "activation ___001_Packages_Debian_single_install returned package_installed = $(return____001_Packages_Debian_single_install[package_installed])";
      "activation ___001_Packages_Debian_single_install could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___002_Packages_Debian_single_install returned package_installed = $(return____002_Packages_Debian_single_install[package_installed])";
      "activation ___002_Packages_Debian_single_install could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___003_Packages_Debian_single_install returned package_installed = $(return____003_Packages_Debian_single_install[package_installed])";
      "activation ___003_Packages_Debian_single_install could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___004_Packages_Debian_single_install returned package_installed = $(return____004_Packages_Debian_single_install[package_installed])";
      "activation ___004_Packages_Debian_single_install could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___005_Packages_Debian_single_verify returned package_verified = $(return____005_Packages_Debian_single_verify[package_verified])";
      "activation ___005_Packages_Debian_single_verify could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___006_Packages_Debian_single_verify returned package_verified = $(return____006_Packages_Debian_single_verify[package_verified])";
      "activation ___006_Packages_Debian_single_verify could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
      "activation ___007_Packages_Debian_single_remove returned package_removed = $(return____007_Packages_Debian_single_remove[package_removed])";
      "activation ___007_Packages_Debian_single_remove could not run because it requires classes debian" ifvarclass => "inform_mode.!(debian)";
}

body file control
{
      namespace => "cfdc_simpleapplication";
}

bundle agent s3deploy(runenv, metadata, enable, bucket, directory, netrc)
{

  classes:
      "$(vars)" expression => "default:runenv_$(runenv)_$(vars)";
      "not_$(vars)" expression => "!default:runenv_$(runenv)_$(vars)";

      "deployment_enabled" expression => strcmp("$(enable)", "1");
      "deployment_disabled" not => strcmp("$(enable)", "1");

  vars:
      "activation_id" string => canonify("$(this.bundle)_$($(metadata)[activation][identifier])_$($(metadata)[activation][timestamp])");

      "vars" slist => { "@(default:$(runenv).env_vars)" };
      "$(vars)" string => "$(default:$(runenv).$(vars))";

      "home" string => dirname($(directory));

      "s3_options[acl]" string => "public-read";
      "s3_options[netrc]" string => "$(netrc)";

  methods:
    deployment_enabled::
      "S3 deploy" usebundle => cfdc_aws_s3:sync($(runenv),
                                                "",
                                                $(directory),
                                                $(bucket),
                                                "cfdc_simpleapplication:s3deploy.s3_options"),
      handle => "$(activation_id)_s3_do_deploy";

    deployment_disabled::
      "S3 clear" usebundle => cfdc_aws_s3:clear($(runenv),
                                                "",
                                                $(bucket),
                                                "cfdc_simpleapplication:s3deploy.s3_options"),
      handle => "$(activation_id)_s3_do_clear";

    verbose::
      "metadata" usebundle => default:report_metadata($(this.bundle), $(metadata)),
      inherit => "true";

  reports:
    verbose::
      "$(this.bundle): imported environment '$(runenv)' var '$(vars)' with value '$($(vars))'";
      "$(this.bundle): imported environment '$(runenv)' class '$(vars)' because 'default:runenv_$(runenv)_$(vars)' was defined"
      ifvarclass => "$(vars)";

    deployment_enabled::
      "Deploying $(directory) to S3 bucket $(bucket) with netrc '$(netrc)'";

    deployment_disabled::
      "Clearing S3 bucket $(bucket) with netrc '$(netrc)'";
}

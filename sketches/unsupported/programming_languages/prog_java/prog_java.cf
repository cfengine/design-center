#######################################################
# Java Runtime Environment (JRE)
#######################################################

bundle agent prog_java(type,state)
{
  vars:

    any::

      "java_path"       string => "/usr/lib/java",
      comment => "",
      handle => "prog_java_vars_java_path";

      # Replace a new version of JRE here

      "map_ver[6u30]"   string => "jre1.6.0_30",
      comment => "",
      handle => "prog_java_vars_map_java_version";

      "java_version"     slist => getindices("map_ver"),
      comment => "",
      handle => "prog_java_vars_java_version";

      "sun_jre_url"     string => "http://javadl.sun.com/webapps/download/AutoDL?BundleId=58117",
      comment => "",
      handle => "prog_java_vars_sun_jre_url_i686",
      ifvarclass => "i686";

      "sun_jre_url"     string => "http://javadl.sun.com/webapps/download/AutoDL?BundleId=58119",
      comment => "",
      handle => "prog_java_vars_sun_jre_url_x86_64",
      ifvarclass => "x86_64";

    redhat|centos|fedora::

      "jre_pkgs"      slist => {
				 "java-1.6.0-openjdk",
      },
      comment => "List of JRE packages for Redhat-related distributions",
      handle => "prog_java_vars_jre_pkgs_redhat_centos_fedora",
      ifvarclass => "openjdk";

    debian|ubuntu::

      "jre_pkgs"      slist => {
				 "openjdk-6-jre",
				 "openjdk-6-jre-lib",
      },
      comment => "List of JRE packages for Debian-related distributions",
      handle => "prog_java_vars_jre_pkgs_debian_ubuntu",
      ifvarclass => "openjdk";

    suse|SuSE::

      "jre_pkgs"      slist => {
				 "java-1_6_0-openjdk",
      },
      comment => "List of JRE packages for SUSE",
      handle => "prog_java_vars_jre_pkgs_suse",
      ifvarclass => "openjdk";

      #

  classes:

    any::

      "on"           expression => strcmp("$(state)","on"),
      comment => "Check if to install packages",
      handle => "prog_java_classes_strcmp_on";
      "purge"        expression => strcmp("$(state)","purge"),
      comment => "Check if to remove packages",
      handle => "prog_java_classes_strcmp_purge";
      "openjdk"      expression => strcmp("$(type)","openjdk"),
      comment => "Check if JRE from openjdk or Sun/Oracle",
      handle => "prog_java_classes_strcmp_openjdk";
      "sun"          expression => strcmp("$(type)","sun"),
      comment => "Check if JRE from openjdk or Sun/Oracle",
      handle => "prog_java_classes_strcmp_sun";
      "oracle"       expression => strcmp("$(type)","oracle"),
      comment => "Check if JRE from openjdk or Sun/Oracle",
      handle => "prog_java_classes_strcmp_oracle";

      "have_jre_bin"  expression => fileexists("$(java_path)/sun-jre-$(java_version).bin"),
      comment => "",
      handle => "prog_java_classes_have_jre_bin";
      "unpacked_java" expression => fileexists("$(java_path)/$(map_ver[$(java_version)])/lib/amd64/libnpjp2.so"),
      comment => "",
      handle => "prog_java_classes_already_unpacked";

      #

  files:

    any::

      "$(java_path)/."
      comment => "",
      handle => "prog_java_files_create_java_path",
      create => "true";

    unpacked_java::

      "$(java_path)/current"
      comment => "",
      handle => "prog_java_files_symlink_to_current",
      move_obstructions => "true",
      link_from => ln_s_override("$(java_path)/$(map_ver[$(java_version)])");

    purge.(sun|oracle)::

      "$(java_path)"
      comment => "",
      handle => "prog_java_files_purge_sun_jre",
      depth_search => recurse("inf"),
      file_select => everything,
      delete => tidy;
      

      #

  packages:

    on.openjdk::

      "$(jre_pkgs)"

      comment => "Install JRE packages",
      handle => "prog_java_packages_add",
      package_policy => "add",
      package_method => generic,
      action => log_repaired("stdout","JRE was installed");

    purge.openjdk::

      "$(jre_pkgs)"

      comment => "Remove JRE packages",
      handle => "prog_java_packages_remove",
      package_policy => "delete",
      package_method => generic,
      action => log_repaired("stdout","JRE was removed");

      #

  commands:

    sun|oracle::

    on.!unpacked_java::

      "/usr/bin/wget $(sun_jre_url) -O sun-jre-$(java_version).bin"
      comment => "",
      handle => "prog_java_commands_wget_sun_jre_bin",
      contain => in_dir("$(java_path)");

    on.have_jre_bin.!unpacked_java::

      "/bin/sh ./sun-jre-$(java_version).bin"
      comment => "",
      handle => "prog_java_commands_sh_sun_jre_bin",
      contain => in_dir("$(java_path)");
}

#           #
# body here #
#           #

body link_from ln_s_override(x) 
{
      link_type => "symlink";
      source => "$(x)";
      when_no_source => "force";
      when_linking_children => "override_file";
}

body file_select everything
{
      leaf_name => { ".*" };
      file_result => "leaf_name"; 
}

cloud/aws_ec2	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"name":"ami","type":"string"},{"default":"us-east-1","name":"region","type":"string"},{"default":"t1.micro","name":"type","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of EC2 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS EC2 services","license":"MIT","name":"Cloud::Services::AWS::EC2","tags":["cfdc","cloud","aws","ec2"],"version":1},"namespace":"cfdc_aws_ec2"}
cloud/aws_s3	{"api":{"clear":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"clear_bucket","type":"string"},{"name":"options","type":"array"}],"sync":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"directory","type":"string"},{"name":"bucket","type":"string"},{"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of S3 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS S3 buckets","license":"MIT","name":"Cloud::Services::AWS::S3","tags":["cfdc","cloud","aws","s3"],"version":1},"namespace":"cfdc_aws_s3"}
cloud/aws_sdb	{"api":{"clear":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"clear_domain","type":"string"},{"name":"options","type":"array"}],"sync":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"datafile","type":"string"},{"name":"domain","type":"string"},{"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of SDB integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS SDB domains","license":"MIT","name":"Cloud::Services::AWS::SDB","tags":["cfdc","cloud","aws","sdb"],"version":1},"namespace":"cfdc_aws_sdb"}
cloud/cloud_common	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"main library"},"scripts/aws":{"comment":"AWS interface to start/stop service","license":"GPL","perm":755},"scripts/shim.pl":{"comment":"AWS and OpenStack shim","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.5.0"}},"description":"Common library for cloud services","license":"MIT","name":"Cloud::Services::Common","tags":["cfdc","cloud","aws","openstack"],"version":1}}
cloud/obsolete/cloud_services	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"modules/vcli_decision":{"comment":"VMWare decision module","module":true,"perm":755},"params/demo.json":{"comment":"simple demo of EC2, OpenStack, and VCLI integration"},"params/demo_ec2only.json":{"comment":"simple EC2-only demo"},"scripts/aws":{"comment":"EC2 interface to start/stop service","license":"GPL","perm":755},"scripts/shim.pl":{"comment":"EC2+OpenStack shim to start/stop service","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin"]},"description":"Manage EC2 and VMware instances","license":"MIT","name":"Cloud::Services","tags":["cfdc"],"version":1.1}}
cloud/openstack	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of OpenStack integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage OpenStack services","license":"MIT","name":"Cloud::Services::OpenStack","tags":["cfdc","cloud","openstack"],"version":1},"namespace":"cfdc_cloud_openstack"}
databases/mysql_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"server","type":"boolean"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install MySQL client"},"params/demo_server.json":{"comment":"Install MySQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the MySQL database engine","license":"MIT","name":"Database::Install::MySQL","tags":["cfdc"],"version":1},"namespace":"cfdc_db_mysql"}
databases/postgresql_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"server","type":"boolean"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install PostgreSQL client"},"params/demo_server.json":{"comment":"Install PostgreSQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the PostgreSQL database engine","license":"MIT","name":"Database::Install::PostgreSQL","tags":["cfdc"],"version":1.1},"namespace":"cfdc_db_postgresql"}
databases/sqlite_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Install SQLite"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the SQLite database engine","license":"MIT","name":"Database::Install::SQLite","tags":["cfdc"],"version":1.1},"namespace":"cfdc_db_sqlite"}
libraries/copbl-3.5.0	{"api":{},"interface":["stdlib-350.cf"],"manifest":{"README.md":{"documentation":true},"stdlib-350.cf":{"desc":"COPBL"}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"The portions of the CFEngine standard library (also known as COPBL) that are only compatible with 3.5.0 and higher","license":"LGPL","name":"CFEngine::stdlib::3.5.0","tags":["cfdc"],"version":110},"namespace":null}
libraries/copbl	{"api":{},"interface":["cfengine_stdlib.cf"],"manifest":{"README.md":{"documentation":true},"cfengine_stdlib.cf":{"desc":"COPBL"}},"metadata":{"authors":["CFEngine AS","ahdinosaur"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"The portions of the CFEngine standard library (also known as COPBL) that are compatible with 3.4.0 releases","license":"LGPL","name":"CFEngine::stdlib","tags":["cfdc"],"version":111},"namespace":null}
libraries/dclib-3.5.0	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Design Center stdlib"}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"Design Center standard library for CFEngine 3.5.0 and higher","license":"MIT","name":"CFEngine::dclib::3.5.0","tags":["cfdc","stdlib"],"version":"3.5.0"},"namespace":"cfdc_dclib_350"}
libraries/dclib	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Design Center stdlib"}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"Design Center standard library","license":"MIT","name":"CFEngine::dclib","tags":["cfdc","stdlib"],"version":"1.0.0"}}
libraries/hardware_info	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"Main library","version":"1.2"},"sketch.json":{"comment":"metadata"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Trondham via cfengineers.org"],"depends":{"cfengine":{"version":"3.2.1"}},"description":"Discover hardware information","license":"MIT","name":"Library::Hardware::Info","tags":["cfdc"],"version":1.2}}
libraries/yale	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Yale stdlib"}},"metadata":{"authors":["Yale University"],"depends":{"cfengine":{"version":"3.3.0"}},"description":"Yale standard library","license":"MIT","name":"Yale::stdlib","tags":["cfdc","yale"],"version":"1.0.0"}}
monitoring/snmp/hp_snmp_agents	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"main file","version":1.1}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.2.1"},"os":["linux"]},"description":"Install and optionally configure hp-snmp-agents","license":"MIT","name":"Monitoring::Snmp::hp_snmp_agents","tags":["cfdc"],"version":1.1}}
monitoring/snmp/snmpwalk	{"api":{"walk":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"/usr/bin/snmpwalk -Oaqt -m ALL -v 2c -c public","description":"Command line to execute 'snmpwalk' (with options).  Note that '-Oaqt' is required and '-m ALL' is highly recommended.","name":"snmpwalk","type":"string"},{"default":"localhost","description":"Agent to target, e.g. a host name or IP address","name":"agent","type":"string"},{"default":"","description":"OID to walk","name":"oid","type":"string"},{"description":"Was the tree walked?  Boolean.","name":"walked","type":"return"},{"description":"Name of array defined by the 'walk' bundle","name":"module_array","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"SNMP walk example with defaults"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Do a SNMP walk and translate the results to CFEngine classes and variables","license":"MIT","name":"Monitoring::SNMP::Walk","tags":["cfdc","snmp"],"version":1},"namespace":"cfdc_snmp"}
networking/ssh	{"api":{"sshd":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"params","type":"array"}]},"interface":["ssh.cf"],"manifest":{"README.md":{"documentation":true},"params/simple.json":{},"ssh.cf":{"desc":"main file"}},"metadata":{"authors":["Diego Zamboni <diego.zamboni@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"}},"description":"Configure and enable sshd","license":"MIT","name":"Security::SSH","tags":["cfdc"],"version":1.1},"namespace":"cfdc_sshd"}
package_management/aptrepo	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/apt/sources.list","desc":"The file in which we will write the APT sources lines.  Can be /etc/apt/sources.list.d/whatever.list or /etc/apt/sources.list or any other path.","name":"file","type":"string"},{"name":"url","type":"string"},{"name":"distribution","type":"string"},{"name":"components","type":"list"},{"name":"types","type":"list"},{"default":"","name":"options","type":"string"},{"name":"file","type":"return"}],"wipe":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"wipe","type":"boolean"},{"desc":"The file to wipe.  Can be /etc/apt/sources.list.d/whatever.list or /etc/apt/sources.list or any other path.","name":"file","type":"string"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/repos.json":{},"test.cf":{"desc":"Example Policy"}},"metadata":{"authors":["Jean Remond <cfengine@remond.re>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage deb repositories in /etc/apt/sources.list.d/ files or /etc/apt/sources.list","license":"MIT","name":"Repository::apt::Maintain","tags":["cfdc"],"tested":["debian_wheezy"],"version":1},"namespace":"cfdc_aptrepo"}
package_management/yumclient	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/yum.conf","name":"file","type":"string"},{"name":"section","type":"string"},{"name":"config","type":"array"},{"name":"file","type":"return"},{"name":"section","type":"return"}],"ensure_template":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"File to ensure. Note that the file will be OVERWRITTEN so you should probably not specify /etc/yum.conf.  If you leave this blank, it will default to /etc/yum.repos.d/SECTION.repo, where SECTION is the 'section' parameter.","name":"file","type":"string"},{"name":"section","type":"string"},{"name":"template_config","type":"array"},{"name":"file","type":"return"},{"name":"section","type":"return"}],"remove_file":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"remove_file","type":"string"},{"name":"file","type":"return"}],"remove_section":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/yum.conf","name":"file","type":"string"},{"name":"remove_section","type":"string"},{"name":"section","type":"return"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"demo JSON parameters"},"test.cf":{"comment":"Example policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage yum repo client configs in /etc/yum.repos.d","license":"MIT","name":"Repository::Yum::Client","tags":["cfdc"],"tested":["redhat_5","centos_5"],"version":1.3},"namespace":"cfdc_yumclient"}
package_management/yumrepo	{"api":{"manage_metadata":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"name","type":"string"},{"name":"path","type":"string"},{"name":"perm","type":"array"},{"default":60,"description":"Refresh interval for the Yum metadata","name":"refresh_interval","type":"string"},{"default":"$(default:dc_paths.createrepo)","description":"Command to create the repo","name":"createrepo","type":"string"},{"name":"status","type":"return"},{"name":"return_code","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/repos.json":{},"test.cf":{"comment":"Example/Test policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Create and keep Yum repository metadata up to date","license":"MIT","name":"Repository::Yum::Maintain","tags":["cfdc"],"tested":["redhat_5","centos_5"],"version":3}}
programming_languages/cpanm	{"api":{"install":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/usr/local/bin/cpanm","name":"cpanm_program","type":"string"},{"default":"","name":"extra_params","type":"string"},{"name":"packages","type":"list"},{"name":"installed","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Install CPAN packages through App::cpanminus","license":"MIT","name":"Packages::CPAN::cpanm","tags":["cfdc"],"version":1.1},"namespace":"cfdc_cpan"}
security/access	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/security/access.conf","name":"access_file","type":"string"},{"name":"empty_first","type":"boolean"},{"name":"ensured_lines","type":"list"},{"name":"removed_patterns","type":"list"},{"name":"access_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters for use with cf-sketch"},"sketch.json":{"comment":"Sketch definition"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage access.conf values","license":"MIT","name":"System::access","tags":["cfdc","security","access","access.conf"],"version":1},"namespace":"cfdc_access"}
security/file_integrity	{"api":{"watch":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"watch","type":"list"},{"default":"sha256","name":"hash_algorithm","type":"string"},{"default":"1440","name":"ifelapsed","type":"string"},{"name":"paths","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/pcidss_v2.json":{"desc":"PCI parameters"}},"metadata":{"authors":["Eystein Stenberg <eystein@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"}},"description":"File hashes will be generated at intervals specified by ifelapsed. On modification, you can update the hashes automatically. In either case, a local report will be generated and transferred to the CFEngine hub (CFEngine Enterprise only). Note that scanning the files requires a lot of disk and CPU cycles, so you should be careful when selecting the amount of files to check and the interval at which it happens (ifelapsed).","license":"MIT","name":"Security::file_integrity","os":["any"],"tags":["cfdc","pcidss","pcidss_v2","pcidss_v2_sec_11_5"],"version":1},"namespace":"cfdc_file_integrity"}
security/limits	{"api":{"limits":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/security/limits.conf","name":"filename","type":"string"},{"name":"domains","type":"array"},{"default":true,"name":"empty_first","type":"boolean"},{"default":false,"name":"ensure_absent","type":"boolean"},{"name":"filename","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":1.2},"params/example.json":{},"test.cf":{"comment":"Test policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure /etc/security/limits.conf","license":"MIT","name":"Security::security_limits","tags":["cfdc"],"version":1.2},"namespace":"cfdc_security_limits"}
security/tcpwrappers	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/hosts.allow","name":"allow_filename","type":"string"},{"default":"/etc/hosts.allow","name":"deny_filename","type":"string"},{"name":"allow","type":"array"},{"name":"deny","type":"array"},{"default":true,"name":"empty_first","type":"boolean"},{"default":false,"name":"ensure_absent","type":"boolean"},{"name":"allow_filename","type":"return"},{"name":"deny_filename","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":1.2},"params/params.json":{"comment":"Example json parameters for cf-sketch"},"sketch.json":{"comment":"Sketch metadata"},"test-complex.cf":{"comment":"Complex Test Policy"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage /etc/hosts.{allow,deny}","license":"MIT","name":"Security::tcpwrappers","tags":["cfdc"],"version":1.2},"namespace":"cfdc_tcpwrappers"}
sketch_template	{"api":{"entry":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"default":"1","name":"myboolean","type":"boolean"},{"default":"fallback","name":"mytype","type":"string"},{"description":"This is my IP address or whatever","name":"myip","type":"string"},{"name":"mylist","type":"list"},{"name":"myarray","type":"array"},{"name":"myreturn","type":"return"},{"name":"myreturn2","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"modules/mymodule":{"comment":"Sample module bundled with the sketch","module":true,"perm":755},"params/demo.json":{"comment":"simple demo of sketch"},"scripts/sample.sh":{"comment":"Sample script bundled with the sketch","perm":755},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin"]},"description":"Standard template for Design Center sketches","license":"MIT","name":"CFEngine::sketch_template","tags":["cfdc"],"version":"1.01"},"namespace":"cfdc_sketch_template"}
system/config_resolver	{"api":{"resolver":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/resolv.conf","name":"file","type":"string"},{"name":"nameserver","type":"list"},{"name":"search","type":"list"},{"name":"domain","type":"list"},{"name":"options","type":"list"},{"name":"sortlist","type":"list"},{"name":"extra","type":"list"},{"name":"resolv_conf","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":2.1},"params/example.json":{"comment":"Example parameters"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Jean Remond <cfengine@remond.re>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure DNS resolver","license":"MIT","name":"System::config_resolver","tags":["cfdc"],"version":1.1},"namespace":"cfdc_resolver"}
system/cron	{"api":{"d":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/cron.d","name":"cron_path","type":"string"},{"name":"file_task","type":"string"},{"default":{"args":["LOGNAME","128"],"function":"getenv"},"name":"runas","type":"string"},{"name":"when","type":"string"},{"name":"commands","type":"list"},{"name":"tab","type":"return"},{"name":"path","type":"return"}],"tab":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/usr/bin/crontab","name":"cron_path","type":"string"},{"name":"line_task","type":"string"},{"default":{"args":["LOGNAME","128"],"function":"getenv"},"name":"runas","type":"string"},{"name":"when","type":"string"},{"name":"commands","type":"list"},{"name":"tab","type":"return"},{"name":"path","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"}},"metadata":{"authors":["Neil H Watson <neil@watson-wilson.ca>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux|solaris|darwin"]},"description":"Manage crontab and /etc/cron.d contents","license":"MIT","name":"System::cron","tags":["cfdc"],"version":2},"namespace":"cfdc_cron"}
system/etc_hosts	{"api":{"configure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/hosts","name":"hostfile","type":"string"},{"name":"defined_only","type":"boolean"},{"name":"hosts","type":"array"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin|windows"]},"description":"Manage /etc/hosts","license":"MIT","name":"System::etc_hosts","tags":["cfdc"],"version":2.2},"namespace":"cfdc_etc_hosts"}
system/motd	{"api":{"entry":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Message of the Day (aka motd)","name":"motd","type":"string"},{"default":"/etc/motd","description":"Location of the primary, often only, MotD file","name":"motd_path","type":"string"},{"default":"/bin/uname -snrvm","description":"Command output to prepend to MotD","name":"prepend_command","type":"string"},{"default":null,"description":"Location of the dynamic part of the MotD file","name":"dynamic_path","type":"string"},{"default":null,"description":"Location of the symlink to the motd file","name":"symlink_path","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/debian_squeeze.json":{"comment":"simple configuration for Debian Squeeze and Lenny"},"params/debian_wheezy.json":{"comment":"simple configuration for Debian Wheezy"},"params/example.json":{"comment":"example configuration"},"params/simple.json":{"comment":"simple configuration that should work on most systems"},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":111},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure the Message of the Day","license":"MIT","name":"System::motd","tags":["cfdc"],"version":"1.00"},"namespace":"cfdc_motd"}
system/set_hostname	{"api":{"set":[{"single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"hostname","type":"string"},{"name":"domainname","type":"string"},{"name":"hostname","type":"return"},{"name":"domainname","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":"1.05.2"},"params/example.json":{"comment":"Sample parameters to set hostname to node1.example.com"},"test.cf":{"comment":"Standalone Test policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin"]},"description":"Configure system hostname","license":"MIT","name":"System::set_hostname","tags":["cfdc"],"version":"1.05.2"},"namespace":"cfdc_hostname"}
system/sysctl	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/sysctl.conf","name":"sysctl_file","type":"string"},{"name":"empty_first","type":"boolean"},{"name":"ensured_kv","type":"array"},{"name":"removed_kv","type":"array"},{"name":"removed_vars","type":"list"},{"name":"sysctl_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters for use with cf-sketch"},"sketch.json":{"comment":"Sketch definition"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage sysctl values","license":"MIT","name":"System::sysctl","tags":["cfdc"],"version":1.5},"namespace":"cfdc_sysctl"}
system/tzconfig	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"timezone","type":"string"},{"name":"zoneinfo","type":"string"},{"name":"timezone","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.2},"params/US_Central.json":{"comment":"Sample parameters to set timezone to US Central"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage system timezone configuration","license":"MIT","name":"System::tzconfig","tags":["cfdc"],"version":1.2},"namespace":"cfdc_tzconfig"}
utilities/abortclasses	{"api":{"abortclasses_filebased":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"abortclass","type":"string"},{"default":"/COWBOY","name":"trigger_file","type":"string"},{"default":false,"name":"alert_only","type":"boolean"},{"default":"any","name":"trigger_context","type":"string"},{"default":{"action":"abortclasses_timeout_action_noop","days":0,"enabled":false,"hours":24,"minutes":0,"months":0,"years":0},"name":"timeout","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"},"test.cf":{"comment":"Standalone test policy"}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>","Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"}},"description":"Abort execution if a certain file exists, aka 'Cowboy mode'","license":"MIT","name":"Utilities::abortclasses","tags":["cfdc"],"version":1.7},"namespace":null}
utilities/data_classes	{"api":{"byfile":[{"description":"*Global* class to define if all the `files` exist.","name":"classname","type":"string"},{"description":"List of files that must all exist for the `classname` to be defined","name":"files","type":"list"},{"name":"defined","type":"return"}],"byport":[{"description":"*Global* class to define if all the `ports` have listeners.","name":"classname","type":"string"},{"description":"List of ports that must all have a listener for the `classname` to be defined","name":"ports","type":"list"},{"name":"defined","type":"return"}],"byprocess":[{"description":"*Global* class to define if all the `process_patterns` are matched.","name":"classname","type":"string"},{"description":"List of process patterns that must all match in the process table for the `classname` to be defined","name":"process_patterns","type":"list"},{"default":"","description":"If not empty, require this owner of the processes for the `classname` to be defined","name":"owner","type":"string"},{"default":1,"description":"Required minimum count of processes for the `classname` to be defined","name":"min_process_count","type":"string"},{"default":1000000,"description":"Required maximum count of processes for the `classname` to be defined (default is very large)","name":"max_process_count","type":"string"},{"name":"defined","type":"return"}],"byshell":[{"description":"*Global* class to define if all the `commands` run OK.","name":"classname","type":"string"},{"description":"List of commands that must all run OK for the `classname` to be defined","name":"commands","type":"list"},{"name":"defined","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo of data-driven classes."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Define classes from data","license":"MIT","name":"Data::Classes","tags":["cfdc","data","classes"],"version":1}}
utilities/generic_services	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"name","type":"string"},{"description":"startcommand","name":"start","type":"string"},{"description":"stopcommand","name":"stop","type":"string"},{"name":"pattern","type":"string"},{"default":"start","description":"Indicate desired service state: start, stop","name":"policy","type":"string"},{"name":"policy_implemented","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo of service control."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Control services in a generic way","license":"MIT","name":"Services::Generic","tags":["cfdc"],"version":1},"namespace":"cfdc_service_generic"}
utilities/ipverify	{"api":{"maybe_usebundle":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"ip","type":"string"},{"name":"maclist","type":"list"},{"name":"usebundle","type":"string"},{"default":"/usr/sbin/arp","name":"arp_command","type":"string"},{"name":"match","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example"},"params/if_at_home_backup_pictures.json":{"comment":"Sample parameters to backup my pictures when I am at home"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Execute a bundle if reachable ip has known MAC address","license":"MIT","name":"Utilities::ipverify","tags":["cfdc"],"version":1.1},"namespace":"cfdc_ipverify"}
utilities/nagios_plugin_agent	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.04},"modules/nagios_plugin_wrapper":{"desc":"plugin wrapper"},"params/check_dummy_OK.json":{"comment":"Sample parameters to do a dummy OK check"}},"metadata":{"authors":["Robert Carleton <rbc@rbcarleton.com>","Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.2.1"},"os":["linux"]},"description":"Run Nagios plugins and optionally take action","license":"MIT","name":"Monitoring::nagios_plugin_agent","tags":["cfdc"],"version":1.04}}
utilities/ping_report	{"api":{"ping":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"hosts","type":"list"},{"name":"count","type":"string"},{"name":"reached","type":"return"},{"name":"not_reached","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters to report on a few hosts connectivity."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Report on pingability of hosts","license":"MIT","name":"Utilities::ping_report","tags":["cfdc"],"version":1.2},"namespace":"cfdc_ping"}
utilities/vcs_mirror	{"api":{"mirror":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"vcs","type":"string"},{"name":"path","type":"string"},{"name":"origin","type":"string"},{"name":"branch","type":"string"},{"name":"options","type":"array"},{"name":"deploy_path","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.12},"params/cfengine-copbl.json":{"comment":"Sample parameters to use Git to check out the CFEngine standard library (COPBL) into /tmp/cfengine-copbl"},"params/cfengine-core-runas-tzz.json":{"comment":"Same as cfengine-core.json, but runs as user 'tzz'"},"params/cfengine-core.json":{"comment":"Sample parameters to use Git to check out the CFEngine core into /tmp/cfengine-core"},"params/thrift-lib-perl.json":{"comment":"Sample parameters to use Subversion to check out the Thrift Perl libraries into /tmp/thrift-lib-perl"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"}},"description":"Check out and update a VCS repository.","license":"MIT","name":"VCS::vcs_mirror","tags":["cfdc"],"version":1.12},"namespace":"cfdc_vcs"}
web_apps/wordpress	{"api":{},"interface":["wordpress.cf"],"manifest":{"README.md":{"documentation":true},"params/wordpress-base.json":{"comment":"Base configuration parameters for different platforms"},"params/wordpress.json":{"comment":"Example configuration parameters"},"wordpress.cf":{"desc":"main file"}},"metadata":{"authors":["Aleksey Tsalolikhin <atsaloli.tech@gmail.com>","Diego Zamboni <diego.zamboni@cfengine.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.3.0"},"os":["linux"]},"description":"Install and configure Wordpress","license":"MIT","name":"WebApps::wordpress_install","tags":["cfdc"],"version":1}}
web_servers/webserver_install	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/apache.json":{"comment":"Apache demo"},"templates/plain.conf":{"comment":"plain web site config"},"templates/ssl.conf":{"comment":"SSL web site config"},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{"version":105},"VCS::vcs_mirror":{"version":"1.12"},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Install and configure a webserver, e.g. Apache","license":"MIT","name":"Webserver::Install","tags":["cfdc"],"version":1}}

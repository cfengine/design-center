applications/newrelic	{"api":{"server":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"not valid","description":"New Relic license key","name":"license_key","type":"string"},{"default":true,"description":"Ensure server monitoring service is running.  Set to false to stop service","name":"ensure","type":"boolean"},{"default":true,"description":"Install packages.  Set to false to remove them","name":"install","type":"boolean"},{"name":"installed","type":"return"},{"name":"configured","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Install New Relic: common parameters"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Sketch for installing, configuring, and starting New Relic monitoring plugins (only server monitoring supported at the moment).","license":"MIT","name":"Applications::NewRelic","tags":["cfdc","newrelic","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_newrelic"}
applications/splunk	{"api":{"install_forwarder":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/opt/splunkforwarder","description":"Where will the Splunk forwarder be installed?","name":"installdir","type":"string","validation":"PATH_ABSOLUTE_UNIX"},{"description":"Splunk collecting (remote!) name in server:port format","name":"server","type":"string"},{"description":"Password for the Splunk forwarder","name":"password","type":"string"},{"default":"# MANAGED BY CFENGINE","description":"The comment marker in our Splunk forwarder templates","name":"comment_marker","type":"string"},{"name":"installed","type":"return"},{"name":"enabled","type":"return"},{"name":"configured","type":"return"},{"name":"restarted","type":"return"}]},"interface":["main.cf"],"manifest":{"Changelog":{"description":"Changelog"},"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Install Splunk: common parameters"},"templates/splunk-inputs.conf":{"description":"Splunk inputs.conf"},"templates/splunk-outputs.conf":{"description":"Splunk outputs.conf"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>","Diego Zamboni <diego.zamboni@cfengine.com>","Nick Anderson <nick@cmdln.org>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"All Linux distributions"}]},"description":"Configure and enable a Splunk forwarder","license":"MIT","name":"Applications::Splunk","tags":["cfdc","install","splunk","enterprise_compatible","enterprise_3_6"],"version":"1.0.1"},"namespace":"cfdc_splunk"}
libraries/EFL	{"api":{"efl_bundlesequence":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Full path to file containing data used to drive the Evolve Thinking framework bundlesequence.","name":"efl_main_data","type":"string"}]},"interface":["efl_common.cf","evolve_freelib.cf","efl_bundlesequence.cf"],"manifest":{"README.md":{"documentation":true},"efl_bundlesequence.cf":{"description":"Main entry to Evolve Thinking framework"},"efl_common.cf":{"description":"Evolve Free Library Common Settings"},"evolve_freelib.cf":{"description":"Evolve Free Library"}},"metadata":{"authors":["Neil Watson <neilhwatson@evolvethinking.com>"],"depends":{"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"The bundles contained in this CFEngine library primarily focus on data driven policy. Each such bundle takes CSV or JSON type delimited parameter file as shown in the common bundle efl_c. Website: https://github.com/evolvethinking/evolve_cfengine_freelib Support: http://evolvethinking.com/","license":"GPLv3","name":"Libraries::EFL","support":"http://evolvethinking.com/","tags":["framework","library","enterprise_compatible","enterprise_3_6"],"version":"1.0","website":"https://github.com/evolvethinking/evolve_cfengine_freelib"}}
networking/ntp/client	{"api":{"client":[{"name":"Set up a NTP client","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"List of NTP peers","name":"peers","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"List of NTP servers","name":"servers","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"List of NTP restrictions","name":"restrictions","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"default":"/var/lib/ntp/drift","description":"Location of drift file","name":"driftfile","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":"/var/log/ntpstats","description":"Location of stats dir","name":"statsdir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":"/etc/ntp.conf","description":"Location of NTP configuration file","name":"conffile","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"Sketch for setting NTP client configuration","license":"MIT","name":"Networking::NTP::Client","tags":["cfdc","ntp","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_ntp"}
package_management/packages_installed	{"api":{"from_file":[{"name":"Install packages listed in an external file","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Filename with packages, one per line","name":"file","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"choice":["add","addupdate","update"],"default":"addupdate","description":"Desired package state","name":"state","type":"string"}],"from_list":[{"name":"Install specific packages","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Packages that should be installed","example":"apache2, zsh","name":"pkgs_add","type":"list","validation":"LIST_OF_PACKAGE_NAME"},{"choice":["add","addupdate","update"],"default":"addupdate","description":"Desired package state","name":"state","type":"string"}],"from_url":[{"name":"Install a package from a URL","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"URL for package file","name":"url","type":"string","validation":"URL"},{"choice":["add","addupdate","update"],"default":"addupdate","description":"Desired package state","name":"state","type":"string"},{"default":"/usr/bin/curl -s","description":"Command to run, will be given the `url` and expected to send the output to STDOUT","name":"url_retriever","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":"/var/tmp","description":"Directory where packages are spooled","name":"spooldir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file","version":"1.0.0"},"params/demo.json":{"description":"example parameters"},"test.pl":{"test":true}},"metadata":{"authors":["Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Ensure certain packages are installed. The networked package manager of the OS (e.g. yum or aptitude) is used to perform installations, so the packages need to be available in its package repository.","license":"MIT","name":"Packages::installed","tags":["cfdc","packages","enterprise_compatible","enterprise_3_6"],"version":"1.0.0"},"namespace":"cfdc_packages"}
package_management/packages_removed	{"api":{"remove_from_file":[{"name":"Remove packages listed in a file","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Filename with packages, one per line","name":"file","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"}],"removed":[{"name":"Specify packages to be removed","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Packages that should not be installed","example":"telnetd","name":"pkgs_removed","type":"list","validation":"LIST_OF_PACKAGE_NAME"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file","version":"1.0.0"},"params/demo.json":{"description":"example parameters"}},"metadata":{"authors":["Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Ensure certain packages are removed (not installed). The package manager of the OS (e.g. rpm or aptitude) is used to check the status of a package and remove it, if necessary.","license":"MIT","name":"Packages::removed","tags":["cfdc","packages","enterprise_compatible","enterprise_3_6"],"version":"1.0.0"},"namespace":"cfdc_packages"}
primitives/file_existence	{"api":{"absent":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"List of files to ensure are absent.","name":"list_of_files","type":"list","validation":"LIST_OF_PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Class to define if all files are absent.","name":"success_class","type":"string","validation":"CLASSNAME"},{"description":"Class to define if any file is present and can not be deleted.","name":"fail_class","type":"string","validation":"CLASSNAME"}],"present":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"List of files to ensure are absent.","name":"list_of_files","type":"list","validation":"LIST_OF_PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Class to define if all files are present.","name":"success_class","type":"string","validation":"CLASSNAME"},{"description":"Class to define if any file is absent and can not be created.","name":"fail_class","type":"string","validation":"CLASSNAME"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>"],"bundle_descriptions":{"absent":"Ensure all given files are absent.","know_exists":"Check if all given files are present.","present":"Ensure all given files are present."},"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"This sketch provides facilities ensuring a list of files exists or not. It can also be used strictly for validating the presence of a file which may be useful for host classification.","license":"MIT","name":"Primitives::files_existence","tags":["cfdc","primitive","files","present","absent","existence","enterprise_compatible","enterprise_3_6"],"version":"1.0"},"namespace":"cfdc_primitives_file_existence"}
security/file_integrity	{"api":{"watch":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Absolute path to files or directories to watch","example":"/etc or /etc/passwd","name":"watch","type":"list","validation":"LIST_OF_PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"choice":["md5","sha1","sha224","sha256","sha384","sha512","best"],"default":"sha256","description":"Hash algorithm","name":"hash_algorithm","type":"string"},{"default":"1440","description":"Time in minutes that should elapse before recheck","example":"1440","name":"ifelapsed","type":"string","validation":"IFELAPSED"},{"name":"paths","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/pcidss_v2.json":{"description":"PCI parameters"}},"metadata":{"authors":["Eystein Stenberg <eystein@cfengine.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"File hashes will be generated at intervals specified by ifelapsed. Reports on changes will be part of the FileChanges report table (CFEngine Enterprise only), or agent output in community. Hashing files requires a lot of disk and CPU cycles, so you should be careful when selecting the amount of files to check and the interval at which it happens (ifelapsed).","license":"MIT","name":"Security::file_integrity","tags":["cfdc","pcidss","pcidss_v2","pcidss_v2_sec_11_5","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_file_integrity"}
security/nologin	{"api":{"etc_nologin":[{"name":"Refuse logins to the system through /etc/nologin","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"choice":["present","absent"],"default":"present","description":"The state of the /etc/nologin file (present|absent).","name":"state","type":"string"},{"default":"Logins refused by policy.","description":"The content the /etc/nologin file should have.","name":"content","type":"string"}],"localuser_nologin":[{"name":"Refuse login privileges to specific users","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"List of users to be restricted from logging in.","name":"list_of_users","type":"list","validation":"LIST_OF_USERNAMES_UNIX"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>"],"bundle_descriptions":{"etc_nologin":"If the file /etc/nologin exists and is readable, login(1) will allow access only to root. Other users will be shown the contents of this file and their logins will be refused.","localuser_nologin":"The nologin command displays a message that an account is not available and exits non-zero. It is intended as a replacement shell field for accounts that have been disabled."},"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"This sketch provides facilities for restricting non root logins to a host.","license":"MIT","name":"Security::nologin","tags":["enterprise_compatible","security","sketchify_generated","nologin","enterprise_3_6","cfdc"],"version":"1.0"},"namespace":"cfdc_security_nologin"}
sketch_template	{"api":{"entry":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"default":"1","name":"myboolean","type":"boolean"},{"default":"fallback","name":"mytype","type":"string"},{"description":"This is my IP address or whatever","name":"myip","type":"string"},{"name":"mylist","type":"list"},{"name":"myarray","type":"array"},{"name":"myreturn","type":"return"},{"name":"myreturn2","type":"return"}]},"interface":[],"manifest":{"README.md":{"documentation":true},"modules/mymodule":{"description":"Sample module bundled with the sketch","module":true,"perm":755},"params/demo.json":{"description":"simple demo of sketch"},"scripts/sample.sh":{"description":"Sample script bundled with the sketch","perm":755},"standard.inc":{"description":"standard DC include template","version":1},"zmain.cf":{"description":"main file"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS"}]},"description":"Standard template for Design Center sketches","license":"MIT","name":"CFEngine::sketch_template","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":"2.00"},"namespace":"cfdc_sketch_template"}
system/config_resolver	{"api":{"resolver":[{"name":"Set up the DNS resolver","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/resolv.conf","description":"Location of the resolver configuration file","name":"file","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"List of DNS servers","name":"nameserver","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"List of DNS search domains (exclusive to 'domain')","name":"search","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"Default DNS domains (exclusive to 'search')","name":"domain","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"List of resolver options","name":"options","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"DNS sortlist (defaults to the natural netmask)","name":"sortlist","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"Extra resolver options, platform-dependent","name":"extra","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"name":"resolv_conf","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file","version":2.1},"params/example.json":{"description":"Example parameters"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Jean Remond <cfengine@remond.re>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"Linux"}]},"description":"Configure DNS resolver","license":"MIT","name":"System::config_resolver","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":1.1},"namespace":"cfdc_resolver"}
system/etc_hosts	{"api":{"configure":[{"name":"Set the contents of a hosts file","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/hosts","description":"Location of the hosts file","name":"hostfile","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Keep only the given entries in the hosts file (but note that 127.0.0.1 and localhost are never removed)","name":"defined_only","type":"boolean"},{"description":"Map of address keys to host lines","name":"hosts","type":"array","validation":"ETC_HOSTS_VALIDATION"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/example.json":{"description":"Example parameters"},"test.pl":{"test":true}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"darwin":"Mac OS X / Darwin","linux":"Linux","windows":"Windows"}]},"description":"Manage /etc/hosts","license":"MIT","name":"System::etc_hosts","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":2.2},"namespace":"cfdc_etc_hosts"}
system/motd	{"api":{"entry":[{"name":"Set up the Message Of The Day","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"Message of the Day (aka motd)","name":"motd","type":"string"},{"default":"/etc/motd","description":"Location of the primary, often only, MotD file","name":"motd_path","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":"/bin/uname -snrvm","description":"Command output to prepend to MotD.  Leave empty to avoid.","name":"prepend_command","type":"string"},{"default":null,"description":"Optional symlink to the motd file","name":"symlink_path","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/debian_squeeze.json":{"description":"simple configuration for Debian Squeeze and Lenny"},"params/debian_wheezy.json":{"description":"simple configuration for Debian Wheezy"},"params/example.json":{"description":"example configuration"},"params/simple.json":{"description":"simple configuration that should work on most systems"}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"Linux"}]},"description":"Configure the Message of the Day","license":"MIT","name":"System::motd","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":"1.00"},"namespace":"cfdc_motd"}
system/set_hostname	{"api":{"set":[{"name":"Set the system hostname","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Host name to set","example":"myhost","name":"hostname","type":"string","validation":"HOSTNAME"},{"description":"Domain name to set","example":"example.com","name":"domainname","type":"string","validation":"HOSTNAME"},{"name":"hostname","type":"return"},{"name":"domainname","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"description":"changelog"},"main.cf":{"description":"main file","version":"1.05.2"},"params/example.json":{"description":"Sample parameters to set hostname to node1.example.com"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"centos":"CentOS","darwin":"Mac OS X","debian":"Debian","gentoo":"Gentoo","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Set system hostname. Domain name is also set on Mac, Red Hat and and Gentoo derived distributions (but not Debian)","license":"MIT","name":"System::set_hostname","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":"1.05.2"},"namespace":"cfdc_hostname"}
system/sysctl	{"api":{"set":[{"name":"Set up the sysctl contents","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/sysctl.conf","description":"sysctl configuration file","name":"sysctl_file","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":false,"name":"empty_first","type":"boolean"},{"description":"Parameters that must be in the sysctl","name":"ensured_kv","type":"array","validation":"KVMAP"},{"default":{"unwantedvar":"unwantedsetting"},"description":"Specific key-value combinations to be removed (regular expressions allowed)","name":"removed_kv","type":"array","validation":"KVMAP"},{"default":["nosuchvar"],"description":"Specific variables to be removed (regular expressions allowed)","name":"removed_vars","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"name":"sysctl_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"description":"changelog"},"example.cf":{"description":"Example Policy"},"main.cf":{"description":"main file"},"params/example.json":{"description":"Example parameters for use with cf-sketch"},"sketch.json":{"description":"Sketch definition"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"Linux"}]},"description":"Manage sysctl values","license":"MIT","name":"System::sysctl","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":1.5},"namespace":"cfdc_sysctl"}
system/syslog	{"api":{"set":[{"name":"Set up the syslog contents","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/rsyslog.conf","description":"syslogd/rsyslogd configuration file","name":"syslog_file","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":false,"name":"empty_first","type":"boolean"},{"description":"Key-value pairs ensured to be present","name":"ensured_kv","type":"array","validation":"KVMAP"},{"default":{"removethisvar":"somevalue"},"description":"Key-value pairs ensured to be removed","name":"removed_kv","type":"array","validation":"KVMAP"},{"default":["nosuchvar"],"description":"Variable names ensured to be present","name":"removed_vars","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"name":"syslog_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Example parameters for use with cf-sketch"},"sketch.json":{"description":"Sketch definition"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>","Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com","Diego Zamboni <diego.zamboni@cfengine.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"All Linux distributions","solaris":"Solaris 8-11"}]},"description":"Manage syslog configuration","license":"MIT","name":"System::syslog","tags":["cfdc","syslog","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_syslog"}
system/tzconfig	{"api":{"set":[{"name":"Set the timezone","single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"choice":["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Choibalsan","Asia/Chongqing","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/Stanley","Atlantic/St_Helena","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney","Europe/Amsterdam","Europe/Andorra","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Pacific/Apia","Pacific/Auckland","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"],"description":"Time zone","name":"timezone","type":"string"},{"default":"/usr/share/zoneinfo","description":"Directory of zoneinfo data files","name":"zoneinfo_dir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"name":"timezone","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file","version":1.3},"params/US_Central.json":{"description":"Sample parameters to set timezone to US Central"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"Linux"}]},"description":"Manage system timezone configuration","license":"MIT","name":"System::tzconfig","tags":["cfdc","enterprise_compatible","enterprise_3_6"],"version":1.3},"namespace":"cfdc_tzconfig"}
system/users	{"api":{"ensure_users":[{"name":"Ensure the users exist as specified","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"User names to add (separate by commas)","name":"users","type":"list","validation":"LIST_OF_STRING_NONEMPTY"},{"description":"Primary user group","name":"group","type":"string","validation":"STRING_NONEMPTY"},{"default":"/home","description":"Location of the parent directory of the user's home directory","name":"homedir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"choice":["/bin/sh","/bin/bash","/bin/csh","/bin/tcsh","/bin/zsh"],"default":"/bin/bash","description":"User shell","name":"shell","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"example configuration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"aix":"AIX","linux":"Linux","solaris":"Solaris","windows":"Windows"}]},"description":"Configure users with parameters","license":"MIT","name":"System::Users","tags":["cfdc","users","enterprise_compatible","enterprise_3_6"],"version":"1.00"},"namespace":"cfdc_users"}
utilities/dropdir	{"api":{"dropdir_run":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"any","description":"Context in which to run","name":"context","type":"string"},{"description":"Drop directory (put scripts to be run here)","name":"directory","type":"string"},{"default":7,"description":"Number of days to keep the scripts","name":"days","type":"string","validation":"DIGITS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Demo of usage."}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"Run the scripts in a directory for a limited time when a given context is true and report their output in the 'dropdir' bundle.  Clean out outdated scripts.  Requires three or more letters in the script name","license":"MIT","name":"Run::Dropdir","tags":["cfdc","run","dropdir","window","enterprise_compatible","enterprise_3_6"],"version":1}}
utilities/roles	{"api":{"roles":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"choice":["webserver","dbserver","memcached","proxy","gridworker","oracle","mysql","postgresql","sybase"],"description":"Desired system role","name":"role","type":"string"},{"default":[],"description":"Other desired system roles, separated by commas","name":"extra_roles","type":"list"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file","version":"1.0.0"},"params/demo.json":{"description":"example parameters"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"linux":"Linux","windows":"Windows"}]},"description":"Set system roles from a list","license":"MIT","name":"Utilities::Roles","tags":["cfdc","utilities","roles","enterprise_compatible","enterprise_3_6"],"version":"1.0.0"}}
utilities/run_once	{"api":{"run":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"any","description":"Context in which to run OR file with classes or hostnames in which to run","name":"context","type":"string"},{"description":"List of scripts to run.  If an element is a file, use that file as TXT or CSV","name":"scripts","type":"list"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Demo of usage."}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"Run a given script at most once when a given context is true.","license":"MIT","name":"Run::Once","tags":["cfdc","run","once","window","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_utilities_run_once"}
utilities/run_withdata	{"api":{"run":[{"name":"Run the script with the parameters directly","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"Script to run","name":"script","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":{},"description":"Parameters that will be passed to the script in JSON format as a file argument","name":"parameters","type":"array"}],"run_fromfile":[{"name":"Run the script with the parameters in a file","type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"Script to run","name":"script","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"JSON data file","name":"jfile","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"description":"main file"},"params/demo.json":{"description":"Demo of usage."}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::sketch_template":{},"cfengine":{"version":"3.6.0"},"os":[{"any":"Any OS","linux":"Linux","windows":"Windows"}]},"description":"Run a given script with the given parameters in a JSON file or passed directly.","license":"MIT","name":"Run::WithData","tags":["cfdc","run","data","json","enterprise_compatible","enterprise_3_6"],"version":1},"namespace":"cfdc_utilities_run_withdata"}

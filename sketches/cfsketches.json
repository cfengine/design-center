applications/memcached	{"api":{"server":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"11211","name":"port","type":"string"},{"default":"nobody","name":"user","type":"string"},{"default":"1024","name":"maxconn","type":"string"},{"default":"64","name":"cachesize","type":"string"},{"default":"0.0.0.0","name":"listen","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"test.cf":{},"test.pl":{"test":true}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["debian|ubuntu|redhat|centos|fedora"]},"description":"Sketch for installing, configuring, and starting memcached.","license":"MIT","name":"Applications::Memcached","tags":["cfdc","memcached"],"version":1},"namespace":"cfdc_memcached"}
applications/nagios/nrpe	{"api":{"agent":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/nagios/nrpe.cfg","name":"given_conf_file","type":"string"},{"default":"/etc/nagios/nrpe_local.cfg","name":"given_local_conf_file","type":"string"},{"default":"/var/run/nagios/nrpe.pid","name":"pidfile","type":"string"},{"default":"5666","name":"server_port","type":"string"},{"default":"nagios","name":"user","type":"string"},{"default":"nagios","name":"group","type":"string"},{"default":"0","name":"dont_blame_nrpe","type":"string"},{"default":"60","name":"command_timeout","type":"string"},{"name":"allowed_hosts","type":"string"},{"default":{},"name":"commands","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["ubuntu|debian"]},"description":"Sketch for configuring Nagios NRPE","license":"MIT","name":"Applications::Nagios::NRPE","tags":["cfdc","nagios","nrpe"],"version":1},"namespace":"cfdc_nrpe"}
applications/newrelic	{"api":{"server":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"not valid","name":"license_key","type":"string"},{"default":true,"description":"Ensure service is running.  Set to false to stop service.","name":"ensure","type":"boolean"},{"default":true,"description":"Install packages.  Set to false to remove them.","name":"install","type":"boolean"},{"name":"installed","type":"return"},{"name":"configured","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Install New Relic: common parameters"},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["debian|ubuntu"]},"description":"Sketch for installing, configuring, and starting New Relic.","license":"MIT","name":"Applications::NewRelic","tags":["cfdc","newrelic"],"version":1},"namespace":"cfdc_newrelic"}
applications/php_fpm	{"api":{"server":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/php5/fpm/php-fpm.conf","name":"given_conf_file","type":"string"},{"default":"/etc/php5/fpm/pool.d","name":"given_pool_dir","type":"string"},{"default":"/var/run/php5-fpm.pid","name":"pidfile","type":"string"},{"default":"/var/log/php5-fpm.log","name":"pidfile","type":"string"},{"default":{},"name":"pools","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["debian|ubuntu"]},"description":"Sketch for installing, configuring, and starting PHP FPM.","license":"MIT","name":"Applications::PHP_FPM","tags":["cfdc","php_fpm","php","fpm"],"version":1},"namespace":"cfdc_php_fpm"}
applications/postfix/client	{"api":{"client":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/postfix/main.cf","name":"given_conf_file","type":"string"},{"default":"$(sys.fqhost)","name":"myhostname","type":"string"},{"default":"$(sys.domain)","name":"mydomain","type":"string"},{"default":"$(sys.fqhost)","name":"myorigin","type":"string"},{"name":"relayhost","type":"string"},{"default":"127.0.0.0/8","name":"mynetworks","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["ubuntu|debian|centos|fedora|redhat"]},"description":"Sketch for configuring Postfix Client","license":"MIT","name":"Applications::Postfix::Client","tags":["cfdc","postfix"],"version":1},"namespace":"cfdc_postfix"}
applications/redis	{"api":{"server":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/var/run/redis.pid","name":"pidfile","type":"string"},{"default":"6379","name":"port","type":"string"},{"default":"0.0.0.0","name":"address","type":"string"},{"default":"0","name":"timeout","type":"string"},{"default":"dump.rdb","name":"dbfilename","type":"string"},{"default":"/var/lib/redis","name":"datadir","type":"string"},{"default":"/var/log/redis/redis.log","name":"logfile","type":"string"},{"default":"yes","name":"glueoutputbuf","type":"string"},{"default":"disabled","name":"shareobjectspoolsize","type":"string"},{"default":"0.0.0.0","name":"masterserver","type":"string"},{"default":"0","name":"masterport","type":"string"},{"name":"saves","type":"list"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["ubuntu|debian"]},"description":"Install, configure, and start Redis.","license":"MIT","name":"Applications::Redis","tags":["cfdc"],"version":1},"namespace":"cfdc_redis"}
applications/splunk	{"api":{"install_forwarder":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/opt/splunkforwarder","description":"Where will the Splunk forwarder be installed?","name":"installdir","type":"string","validation":"PATH_ABSOLUTE_UNIX"},{"description":"Splunk collecting (remote!) name in server:port format","name":"server","type":"string","validation":"HOSTNAME:PORT"},{"description":"Password for the Splunk forwarder","name":"password","type":"string"},{"default":"# MANAGED BY CFENGINE","description":"The comment marker in our Splunk forwarder templates","name":"comment_marker","type":"string"},{"name":"installed","type":"return"},{"name":"enabled","type":"return"},{"name":"configured","type":"return"},{"name":"restarted","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Install Splunk: common parameters"},"templates/splunk-inputs.conf":{"comment":"Splunk inputs.conf"},"templates/splunk-outputs.conf":{"comment":"Splunk outputs.conf"},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.2"},"os":["linux"]},"description":"Install and enable Splunk","license":"MIT","name":"Applications::Splunk","tags":["cfdc","install","splunk"],"version":1},"namespace":"cfdc_splunk"}
applications/zabbix/agent	{"api":{"agent":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/zabbix/zabbix_agentd.conf","name":"conf_file","type":"string"},{"default":"127.0.0.1","name":"server","type":"string"},{"default":"10051","name":"server_port","type":"string"},{"default":"$(sys.fqhost)","name":"host_name","type":"string"},{"default":"10050","name":"listen_port","type":"string"},{"default":"0.0.0.0","name":"listen_ip","type":"string"},{"default":"5","name":"start_agents","type":"string"},{"default":"3","name":"debug_level","type":"string"},{"default":"/var/run/zabbix/zabbix_agentd.pid","name":"pid_file","type":"string"},{"default":"/var/log/zabbix-agent/zabbix_agentd.log","name":"log_file","type":"string"},{"default":"3","name":"timeout","type":"string"},{"name":"user_parameters","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["ubuntu|debian"]},"description":"Sketch for configuring Zabbix clients","license":"MIT","name":"Applications::Zabbix::Agent","tags":["cfdc","zabbix"],"version":1},"namespace":"cfdc_zabbix"}
cloud/autobalance	{"api":{"autobalance":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"URL to check for threshold string","name":"url","type":"string","validation":"URL"},{"default":"/usr/bin/curl -s","description":"Program to collect the URL contents","name":"collector","type":"string"},{"description":"Threshold definitions","name":"thresholds","type":"array","validation":"ARRAY_OF_CLASS_NAMES_TO_CLOUD_ALLOCATION"},{"description":"EC2 options","name":"ec2_options","type":"list","validation":"SEQUENCE_EC2_OPTIONS"},{"description":"OpenStack options","name":"openstack_options","type":"list","validation":"SEQUENCE_OPENSTACK_OPTIONS"},{"description":"Common options for both sketches","name":"common_options","type":"array","validation":"ARRAY_OF_CLOUD_OPTIONS"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of Cloud::Autobalance"},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"Cloud::Services::AWS::EC2":{},"Cloud::Services::OpenStack":{},"Data::Classes":{},"cfengine":{"version":"3.5.0"}},"description":"Autobalance load amongst cloud offerings based on Data::Classes results","license":"MIT","name":"Cloud::Autobalance","tags":["cfdc","cloud","balance","ec2","openstack"],"version":1},"namespace":"cfdc_cloud"}
cloud/aws_ec2	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"name":"ami","type":"string"},{"default":"us-east-1","name":"region","type":"string"},{"default":"t1.micro","name":"type","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of EC2 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS EC2 services","license":"MIT","name":"Cloud::Services::AWS::EC2","tags":["cfdc","cloud","aws","ec2"],"version":1},"namespace":"cfdc_aws_ec2"}
cloud/aws_s3	{"api":{"clear":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"clear_bucket","type":"string"},{"name":"options","type":"array"}],"sync":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"directory","type":"string"},{"name":"bucket","type":"string"},{"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of S3 integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS S3 buckets","license":"MIT","name":"Cloud::Services::AWS::S3","tags":["cfdc","cloud","aws","s3"],"version":1},"namespace":"cfdc_aws_s3"}
cloud/aws_sdb	{"api":{"clear":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"clear_domain","type":"string"},{"name":"options","type":"array"}],"sync":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"datafile","type":"string"},{"name":"domain","type":"string"},{"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of SDB integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage AWS SDB domains","license":"MIT","name":"Cloud::Services::AWS::SDB","tags":["cfdc","cloud","aws","sdb"],"version":1},"namespace":"cfdc_aws_sdb"}
cloud/cloud_common	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"main library"},"scripts/aws":{"comment":"AWS interface to start/stop service","license":"GPL","perm":755},"scripts/shim.pl":{"comment":"AWS and OpenStack shim","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.5.0"}},"description":"Common library for cloud services","license":"MIT","name":"Cloud::Services::Common","tags":["cfdc","cloud","aws","openstack"],"version":1}}
cloud/obsolete/cloud_services	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"modules/vcli_decision":{"comment":"VMWare decision module","module":true,"perm":755},"params/demo.json":{"comment":"simple demo of EC2, OpenStack, and VCLI integration"},"params/demo_ec2only.json":{"comment":"simple EC2-only demo"},"scripts/aws":{"comment":"EC2 interface to start/stop service","license":"GPL","perm":755},"scripts/shim.pl":{"comment":"EC2+OpenStack shim to start/stop service","perm":755}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin"]},"description":"Manage EC2 and VMware instances","license":"MIT","name":"Cloud::Services","tags":["cfdc"],"version":1.1}}
cloud/openstack	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"count","type":"string"},{"description":"Logical class to assign to machines","name":"class","type":"string"},{"name":"install_cfengine","type":"boolean"},{"description":"Hub from which the instances should bootstrap","name":"hub","type":"string"},{"description":"Options: security_group, netrc, ssh_pub_key.","name":"options","type":"array"},{"name":"instance_count","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of OpenStack integration"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"Cloud::Services::Common":{},"cfengine":{"version":"3.5.0"}},"description":"Manage OpenStack services","license":"MIT","name":"Cloud::Services::OpenStack","tags":["cfdc","cloud","openstack"],"version":1},"namespace":"cfdc_cloud_openstack"}
databases/mysql_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"server","type":"boolean"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install MySQL client"},"params/demo_server.json":{"comment":"Install MySQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the MySQL database engine","license":"MIT","name":"Database::Install::MySQL","tags":["cfdc"],"version":1},"namespace":"cfdc_db_mysql"}
databases/mysql_install_simple	{"api":{"simple":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"server","type":"boolean"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install MySQL client"},"params/demo_server.json":{"comment":"Install MySQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the MySQL database engine","license":"MIT","name":"Database::Install::MySQL::Simple","tags":["cfdc","database","mysql","enterprise_compatible"],"version":1},"namespace":"cfdc_db_mysql"}
databases/postgresql_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"server","type":"boolean"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install PostgreSQL client"},"params/demo_server.json":{"comment":"Install PostgreSQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the PostgreSQL database engine","license":"MIT","name":"Database::Install::PostgreSQL","tags":["cfdc"],"version":1.1},"namespace":"cfdc_db_postgresql"}
databases/postgresql_install_simple	{"api":{"simple":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"name":"installed","type":"return"},{"name":"running","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_client.json":{"comment":"Install PostgreSQL client"},"params/demo_server.json":{"comment":"Install PostgreSQL server"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":[{"redhat_6":"Red Hat 6","ubuntu_12_4":"Ubuntu 12.4"}]},"description":"Install and enable the PostgreSQL database engine","license":"MIT","name":"Database::Install::PostgreSQL::Simple","tags":["cfdc","database","postgresql","enterprise_compatible"],"version":1.1},"namespace":"cfdc_db_postgresql"}
databases/sqlite_install	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":false,"name":"purge","type":"boolean"},{"default":[],"name":"extra_packages","type":"list"},{"default":false,"name":"use_only_extra_packages","type":"boolean"},{"name":"installed","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Install SQLite"}},"metadata":{"authors":["Nakarin Phooripoom <nakarin.phooripoom@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Install and enable the SQLite database engine","license":"MIT","name":"Database::Install::SQLite","tags":["cfdc"],"version":1.1},"namespace":"cfdc_db_sqlite"}
libraries/blueprint	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Blueprint to Design Center glue library"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"Library to connect Blueprint sketches with Design Center","license":"MIT","name":"CFEngine::Blueprint","tags":["cfdc","blueprint"],"version":"1.0.0"}}
libraries/copbl-3.5.0	{"api":{},"interface":["stdlib-350.cf"],"manifest":{"README.md":{"documentation":true},"stdlib-350.cf":{"desc":"COPBL"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"The portions of the CFEngine standard library (also known as COPBL) that are only compatible with 3.5.0 and higher","license":"LGPL","name":"CFEngine::stdlib::3.5.0","tags":["cfdc"],"version":110},"namespace":null}
libraries/copbl	{"api":{},"interface":["cfengine_stdlib.cf"],"manifest":{"README.md":{"documentation":true},"cfengine_stdlib.cf":{"desc":"COPBL"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS","ahdinosaur"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"The portions of the CFEngine standard library (also known as COPBL) that are compatible with 3.4.0 releases","license":"LGPL","name":"CFEngine::stdlib","tags":["cfdc"],"version":111},"namespace":null}
libraries/dclib-3.5.0	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Design Center stdlib"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.5.0"}},"description":"Design Center standard library for CFEngine 3.5.0 and higher","license":"MIT","name":"CFEngine::dclib::3.5.0","tags":["cfdc","stdlib"],"version":"3.5.0"},"namespace":"cfdc_dclib_350"}
libraries/dclib	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"dctest.pm":{"desc":"testing utilities"},"library.cf":{"desc":"Design Center stdlib"},"test.pl":{"test":true}},"metadata":{"authors":["CFEngine AS"],"depends":{"cfengine":{"version":"3.4.0"}},"description":"Design Center standard library","license":"MIT","name":"CFEngine::dclib","tags":["cfdc","stdlib"],"version":"1.0.0"}}
libraries/hardware_info	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"Main library","version":"1.2"},"sketch.json":{"comment":"metadata"},"test.pl":{"test":true}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Trondham via cfengineers.org"],"depends":{"cfengine":{"version":"3.2.1"}},"description":"Discover hardware information","license":"MIT","name":"Library::Hardware::Info","tags":["cfdc"],"version":1.2}}
libraries/yale	{"api":{},"interface":["library.cf"],"manifest":{"README.md":{"documentation":true},"library.cf":{"desc":"Yale stdlib"},"test.pl":{"test":true}},"metadata":{"authors":["Yale University"],"depends":{"cfengine":{"version":"3.3.0"}},"description":"Yale standard library","license":"MIT","name":"Yale::stdlib","tags":["cfdc","yale"],"version":"1.0.0"}}
monitoring/snmp/hp_snmp_agents	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"main file","version":1.1}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.2.1"},"os":["linux"]},"description":"Install and optionally configure hp-snmp-agents","license":"MIT","name":"Monitoring::Snmp::hp_snmp_agents","tags":["cfdc"],"version":1.1}}
monitoring/snmp/snmpwalk	{"api":{"walk":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"/usr/bin/snmpwalk -Oaqt -m ALL -v 2c -c public","description":"Command line to execute 'snmpwalk' (with options).  Note that '-Oaqt' is required and '-m ALL' is highly recommended.","name":"snmpwalk","type":"string"},{"default":"localhost","description":"Agent to target, e.g. a host name or IP address","name":"agent","type":"string"},{"default":"","description":"OID to walk","name":"oid","type":"string"},{"description":"Was the tree walked?  Boolean.","name":"walked","type":"return"},{"description":"Name of array defined by the 'walk' bundle","name":"module_array","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"SNMP walk example with defaults"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Do a SNMP walk and translate the results to CFEngine classes and variables","license":"MIT","name":"Monitoring::SNMP::Walk","tags":["cfdc","snmp"],"version":1},"namespace":"cfdc_snmp"}
networking/ntp/client	{"api":{"client":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"peers","type":"list"},{"name":"servers","type":"list"},{"name":"restrictions","type":"list"},{"default":"/var/lib/ntp/drift","name":"driftfile","type":"string"},{"default":"/var/log/ntpstats","name":"statsdir","type":"string"},{"default":"/etc/ntp.conf","name":"conffile","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["redhat|fedora|centos|ubuntu|debian"]},"description":"Sketch for setting NTP client configuration","license":"MIT","name":"Networking::NTP::Client","tags":["cfdc","ntp"],"version":1},"namespace":"cfdc_ntp"}
networking/ssh	{"api":{"sshd":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"params","type":"array"}]},"interface":["ssh.cf"],"manifest":{"README.md":{"documentation":true},"params/simple.json":{},"ssh.cf":{"desc":"main file"}},"metadata":{"authors":["Diego Zamboni <diego.zamboni@cfengine.com>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"}},"description":"Configure and enable sshd","license":"MIT","name":"Security::SSH","tags":["cfdc"],"version":1.1},"namespace":"cfdc_sshd"}
package_management/aptrepo	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/apt/sources.list","desc":"The file in which we will write the APT sources lines.  Can be /etc/apt/sources.list.d/whatever.list or /etc/apt/sources.list or any other path.","name":"file","type":"string"},{"name":"url","type":"string"},{"name":"distribution","type":"string"},{"name":"components","type":"list"},{"name":"types","type":"list"},{"default":"","name":"options","type":"string"},{"name":"file","type":"return"}],"wipe":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"wipe","type":"boolean"},{"desc":"The file to wipe.  Can be /etc/apt/sources.list.d/whatever.list or /etc/apt/sources.list or any other path.","name":"file","type":"string"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/repos.json":{},"test.cf":{"desc":"Example Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Jean Remond <cfengine@remond.re>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":110},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage deb repositories in /etc/apt/sources.list.d/ files or /etc/apt/sources.list","license":"MIT","name":"Repository::apt::Maintain","tags":["cfdc"],"tested":["debian_wheezy"],"version":1},"namespace":"cfdc_aptrepo"}
package_management/debian/single	{"api":{"install":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"description":"call package installation","name":"install","type":"boolean"},{"description":"package to install","name":"package","type":"string"},{"default":null,"description":"optional, minimum version of the package required","name":"version","type":"string"},{"default":null,"description":"optional, release to install from, see: apt-get --target-release","name":"release","type":"string"},{"name":"package_installed","type":"return"}],"remove":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"description":"call package removal","name":"remove","type":"boolean"},{"description":"package to remove","name":"package","type":"string"},{"name":"package_removed","type":"return"}],"verify":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"description":"call package verification","name":"verify","type":"boolean"},{"description":"package to verify","name":"package","type":"string"},{"default":null,"description":"optional, minimum version of the package required","name":"version","type":"string"},{"name":"package_verified","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo of package control."},"params/test.json":{"comment":"Testing parameter set"},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":111},"cfengine":{"version":"3.5.0"},"os":["debian"]},"description":"Manage Debian Packages one at a time","license":"MIT","name":"Packages::Debian::single","tags":["cfdc"],"version":"1.0.0"},"namespace":"cfdc_packages_debian_single"}
package_management/epel	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"1","name":"use_mirrorlist","type":"boolean"},{"default":"0","name":"update_cache","type":"boolean"},{"default":"","name":"proxy_url","type":"string"},{"default":"","name":"proxy_user","type":"string"},{"default":"","name":"proxy_password","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["redhat|centos"]},"description":"Sketch for adding EPEL repos to clients","license":"MIT","name":"Repository::EPEL","tags":["cfdc","epel"],"version":1},"namespace":"cfdc_epel"}
package_management/packages_installed	{"api":{"installed":[{"single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Packages that should be installed","example":"apache2","name":"pkgs_add","type":"list","validation":"LIST_OF_PACKAGE_NAME"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":"1.0.0"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Ensure certain packages are installed. The networked package manager of the OS (e.g. yum or aptitude) is used to perform installations, so the packages need to be available in its package repository.","license":"MIT","name":"Packages::installed","tags":["cfdc","packages","enterprise_compatible"],"version":"1.0.0"},"namespace":"cfdc_packages"}
package_management/packages_removed	{"api":{"removed":[{"single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Packages that should not be installed","example":"telnetd","name":"pkgs_removed","type":"list","validation":"LIST_OF_PACKAGE_NAME"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":"1.0.0"},"params/demo.json":{"desc":"example parameters"}},"metadata":{"authors":["Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":[{"centos":"CentOS","debian":"Debian","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Ensure certain packages are removed (not installed). The package manager of the OS (e.g. rpm or aptitude) is used to check the status of a package and remove it, if necessary.","license":"MIT","name":"Packages::removed","tags":["cfdc","packages","enterprise_compatible"],"version":"1.0.0"},"namespace":"cfdc_packages"}
package_management/yumclient	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/yum.conf","name":"file","type":"string"},{"name":"section","type":"string"},{"name":"config","type":"array"},{"name":"file","type":"return"},{"name":"section","type":"return"}],"ensure_template":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"File to ensure. Note that the file will be OVERWRITTEN so you should probably not specify /etc/yum.conf.  If you leave this blank, it will default to /etc/yum.repos.d/SECTION.repo, where SECTION is the 'section' parameter.","name":"file","type":"string"},{"name":"section","type":"string"},{"name":"template_config","type":"array"},{"name":"file","type":"return"},{"name":"section","type":"return"}],"remove_file":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"remove_file","type":"string"},{"name":"file","type":"return"}],"remove_section":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/yum.conf","name":"file","type":"string"},{"name":"remove_section","type":"string"},{"name":"section","type":"return"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"demo JSON parameters"},"test.cf":{"comment":"Example policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage yum repo client configs in /etc/yum.repos.d","license":"MIT","name":"Repository::Yum::Client","tags":["cfdc"],"tested":["redhat_5","centos_5"],"version":1.3},"namespace":"cfdc_yumclient"}
package_management/yumrepo	{"api":{"manage_metadata":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"name","type":"string"},{"name":"path","type":"string"},{"name":"perm","type":"array"},{"default":60,"description":"Refresh interval for the Yum metadata","name":"refresh_interval","type":"string"},{"default":"$(default:dc_paths.createrepo)","description":"Command to create the repo","name":"createrepo","type":"string"},{"name":"status","type":"return"},{"name":"return_code","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/repos.json":{},"test.cf":{"comment":"Example/Test policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Create and keep Yum repository metadata up to date","license":"MIT","name":"Repository::Yum::Maintain","tags":["cfdc"],"tested":["redhat_5","centos_5"],"version":3}}
programming_languages/cpanm	{"api":{"install":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/usr/local/bin/cpanm","name":"cpanm_program","type":"string"},{"default":"","name":"extra_params","type":"string"},{"name":"packages","type":"list"},{"name":"installed","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Install CPAN packages through App::cpanminus","license":"MIT","name":"Packages::CPAN::cpanm","tags":["cfdc"],"version":1.1},"namespace":"cfdc_cpan"}
security/access	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/security/access.conf","name":"access_file","type":"string"},{"name":"empty_first","type":"boolean"},{"name":"ensured_lines","type":"list"},{"name":"removed_patterns","type":"list"},{"name":"access_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters for use with cf-sketch"},"sketch.json":{"comment":"Sketch definition"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage access.conf values","license":"MIT","name":"System::access","tags":["cfdc","security","access","access.conf"],"version":1},"namespace":"cfdc_access"}
security/file_integrity	{"api":{"watch":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Absolute path to files or directories to watch","example":"/etc or /etc/passwd","name":"watch","type":"list","validation":"LIST_OF_PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"choice":["md5","sha1","sha224","sha256","sha384","sha512","best"],"default":"sha256","description":"Hash algorithm","name":"hash_algorithm","type":"string"},{"default":"1440","description":"Time in minutes that should elapse before recheck","example":"1440","name":"ifelapsed","type":"string","validation":"IFELAPSED"},{"name":"paths","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/pcidss_v2.json":{"desc":"PCI parameters"}},"metadata":{"authors":["Eystein Stenberg <eystein@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":[{"linux":"All Linux distributions","windows":"All Windows versions"}]},"description":"File hashes will be generated at intervals specified by ifelapsed. Reports on changes will be part of the FileChanges report table (CFEngine Enterprise only), or agent output in community. Hashing files requires a lot of disk and CPU cycles, so you should be careful when selecting the amount of files to check and the interval at which it happens (ifelapsed).","license":"MIT","name":"Security::file_integrity","tags":["cfdc","pcidss","pcidss_v2","pcidss_v2_sec_11_5","enterprise_compatible"],"version":1},"namespace":"cfdc_file_integrity"}
security/iptables/filter	{"api":{"filter":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"chain_policies","type":"array"},{"name":"filter_rules","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"This sketch manages simple iptables rules","license":"MIT","name":"Security::IPTables::Filter","tags":["cfdc"],"version":"1.00"},"namespace":"cfdc_iptables"}
security/limits	{"api":{"limits":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/security/limits.conf","name":"filename","type":"string"},{"name":"domains","type":"array"},{"default":true,"name":"empty_first","type":"boolean"},{"default":false,"name":"ensure_absent","type":"boolean"},{"name":"filename","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":1.2},"params/example.json":{},"test.cf":{"comment":"Test policy"},"test.pl":{"test":true}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure /etc/security/limits.conf","license":"MIT","name":"Security::security_limits","tags":["cfdc"],"version":1.2},"namespace":"cfdc_security"}
security/tcpwrappers	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/hosts.allow","name":"allow_filename","type":"string"},{"default":"/etc/hosts.allow","name":"deny_filename","type":"string"},{"name":"allow","type":"array"},{"name":"deny","type":"array"},{"default":true,"name":"empty_first","type":"boolean"},{"default":false,"name":"ensure_absent","type":"boolean"},{"name":"allow_filename","type":"return"},{"name":"deny_filename","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":1.2},"params/params.json":{"comment":"Example json parameters for cf-sketch"},"sketch.json":{"comment":"Sketch metadata"},"test-complex.cf":{"comment":"Complex Test Policy"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage /etc/hosts.{allow,deny}","license":"MIT","name":"Security::tcpwrappers","tags":["cfdc"],"version":1.2},"namespace":"cfdc_tcpwrappers"}
sketch_template	{"api":{"entry":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"default":"__PREFIX__","name":"prefix","type":"string"},{"default":"1","name":"myboolean","type":"boolean"},{"default":"fallback","name":"mytype","type":"string"},{"description":"This is my IP address or whatever","name":"myip","type":"string"},{"name":"mylist","type":"list"},{"name":"myarray","type":"array"},{"name":"myreturn","type":"return"},{"name":"myreturn2","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"modules/mymodule":{"comment":"Sample module bundled with the sketch","module":true,"perm":755},"params/demo.json":{"comment":"simple demo of sketch"},"scripts/sample.sh":{"comment":"Sample script bundled with the sketch","perm":755},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin"]},"description":"Standard template for Design Center sketches","license":"MIT","name":"CFEngine::sketch_template","tags":["cfdc"],"version":"1.01"},"namespace":"cfdc_sketch_template"}
system/config_resolver	{"api":{"resolver":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/resolv.conf","name":"file","type":"string"},{"name":"nameserver","type":"list"},{"name":"search","type":"list"},{"name":"domain","type":"list"},{"name":"options","type":"list"},{"name":"sortlist","type":"list"},{"name":"extra","type":"list"},{"name":"resolv_conf","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":2.1},"params/example.json":{"comment":"Example parameters"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Jean Remond <cfengine@remond.re>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure DNS resolver","license":"MIT","name":"System::config_resolver","tags":["cfdc"],"version":1.1},"namespace":"cfdc_resolver"}
system/cron	{"api":{"d":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/cron.d","name":"cron_path","type":"string"},{"name":"file_task","type":"string"},{"default":{"args":["LOGNAME","128"],"function":"getenv"},"name":"runas","type":"string"},{"name":"when","type":"string"},{"name":"commands","type":"list"},{"name":"tab","type":"return"},{"name":"path","type":"return"}],"tab":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/usr/bin/crontab","name":"cron_path","type":"string"},{"name":"line_task","type":"string"},{"default":{"args":["LOGNAME","128"],"function":"getenv"},"name":"runas","type":"string"},{"name":"when","type":"string"},{"name":"commands","type":"list"},{"name":"tab","type":"return"},{"name":"path","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"}},"metadata":{"authors":["Neil H Watson <neil@watson-wilson.ca>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux|solaris|darwin"]},"description":"Manage crontab and /etc/cron.d contents","license":"MIT","name":"System::cron","tags":["cfdc"],"version":2},"namespace":"cfdc_cron"}
system/etc_hosts	{"api":{"configure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/hosts","name":"hostfile","type":"string"},{"name":"defined_only","type":"boolean"},{"name":"hosts","type":"array"},{"name":"file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"},"test.cf":{},"test.pl":{"test":true}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux|darwin|windows"]},"description":"Manage /etc/hosts","license":"MIT","name":"System::etc_hosts","tags":["cfdc"],"version":2.2},"namespace":"cfdc_etc_hosts"}
system/logrotate	{"api":{"run":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"conf_dir","type":"string"},{"name":"logrotate_globals","type":"array"},{"name":"logrotate_descriptions","type":"array"},{"name":"logrotate_purge","type":"boolean"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Sets defaults and user permissions in the sudoers file","license":"MIT","name":"System::Logrotate","tags":["cfdc","logrotate"],"version":1},"namespace":"cfdc_logrotate"}
system/motd	{"api":{"entry":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Message of the Day (aka motd)","name":"motd","type":"string"},{"default":"/etc/motd","description":"Location of the primary, often only, MotD file","name":"motd_path","type":"string"},{"default":"/bin/uname -snrvm","description":"Command output to prepend to MotD","name":"prepend_command","type":"string"},{"default":null,"description":"Location of the dynamic part of the MotD file","name":"dynamic_path","type":"string"},{"default":null,"description":"Location of the symlink to the motd file","name":"symlink_path","type":"string"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/debian_squeeze.json":{"comment":"simple configuration for Debian Squeeze and Lenny"},"params/debian_wheezy.json":{"comment":"simple configuration for Debian Wheezy"},"params/example.json":{"comment":"example configuration"},"params/simple.json":{"comment":"simple configuration that should work on most systems"},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":111},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Configure the Message of the Day","license":"MIT","name":"System::motd","tags":["cfdc"],"version":"1.00"},"namespace":"cfdc_motd"}
system/routes	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"static_routes","type":"array"},{"name":"purge_routes","type":"boolean"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Sets defaults and user permissions in the sudoers file","license":"MIT","name":"System::Routes","tags":["cfdc","routes","iptables"],"version":1},"namespace":"cfdc_routes"}
system/set_hostname	{"api":{"set":[{"single_use":true,"type":"bundle_options"},{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Host name to set","example":"myhost","name":"hostname","type":"string","validation":"HOSTNAME"},{"description":"Domain name to set","example":"example.com","name":"domainname","type":"string","validation":"HOSTNAME"},{"name":"hostname","type":"return"},{"name":"domainname","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file","version":"1.05.2"},"params/example.json":{"comment":"Sample parameters to set hostname to node1.example.com"},"test.cf":{"comment":"Standalone Test policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":[{"centos":"CentOS","darwin":"Mac OS X","debian":"Debian","gentoo":"Gentoo","redhat":"Red Hat","ubuntu":"Ubuntu"}]},"description":"Set system hostname. Domain name is also set on Mac, Red Hat and and Gentoo derived distributions (but not Debian).","license":"MIT","name":"System::set_hostname","tags":["cfdc"],"version":"1.05.2"},"namespace":"cfdc_hostname"}
system/sudoers	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/sudoers","name":"file_path","type":"string"},{"default":"/usr/sbin/visudo","description":"Path to visudo command.  Use /bin/true to make it always succeed.","name":"visudo_path","type":"string"},{"name":"defaults","type":"array"},{"name":"user_alias","type":"array"},{"name":"host_alias","type":"array"},{"name":"cmnd_alias","type":"array"},{"name":"runas_alias","type":"array"},{"name":"user_permissions","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Sets defaults and user permissions in the sudoers file","license":"MIT","name":"System::Sudoers","tags":["cfdc","sudoers"],"version":1},"namespace":"cfdc_sudoers"}
system/sysctl	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/sysctl.conf","name":"sysctl_file","type":"string"},{"name":"empty_first","type":"boolean"},{"name":"ensured_kv","type":"array"},{"name":"removed_kv","type":"array"},{"name":"removed_vars","type":"list"},{"name":"sysctl_file","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"example.cf":{"comment":"Example Policy"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters for use with cf-sketch"},"sketch.json":{"comment":"Sketch definition"},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage sysctl values","license":"MIT","name":"System::sysctl","tags":["cfdc"],"version":1.5},"namespace":"cfdc_sysctl"}
system/syslog	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/etc/syslog.conf","name":"conf_file","type":"string"},{"name":"config","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["solaris"]},"description":"Configures syslog","license":"MIT","name":"System::Syslog","tags":["cfdc"],"version":1},"namespace":"cfdc_syslog"}
system/tzconfig	{"api":{"set":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"timezone","type":"string"},{"name":"zoneinfo","type":"string"},{"name":"timezone","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.2},"params/US_Central.json":{"comment":"Sample parameters to set timezone to US Central"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Manage system timezone configuration","license":"MIT","name":"System::tzconfig","tags":["cfdc"],"version":1.2},"namespace":"cfdc_tzconfig"}
system/users_local	{"api":{"local":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"users","type":"array"},{"default":{"groupname":"defaultgroup"},"name":"options","type":"array"}],"runbased":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"default":"/usr/bin/id","description":"Command to run to check if a user exists.","name":"checker","type":"string"},{"name":"users","type":"array"},{"default":{"groupname":"defaultgroup"},"name":"options","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"desc":"example parameters"},"test.cf":{"desc":"example policy"},"test.pl":{"test":true}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"CFEngine::stdlib::3.5.0":{},"cfengine":{"version":"3.5.0"},"os":["redhat|centos|ubuntu|debian"]},"description":"Sketch for managing local users","license":"MIT","name":"Users::Local","tags":["cfdc","users"],"version":1},"namespace":"cfdc_users"}
utilities/abortclasses	{"api":{"abortclasses_filebased":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"abortclass","type":"string"},{"default":"/COWBOY","name":"trigger_file","type":"string"},{"default":false,"name":"alert_only","type":"boolean"},{"default":"any","name":"trigger_context","type":"string"},{"default":{"action":"abortclasses_timeout_action_noop","days":0,"enabled":false,"hours":24,"minutes":0,"months":0,"years":0},"name":"timeout","type":"array"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters"},"test.cf":{"comment":"Standalone test policy"}},"metadata":{"authors":["Ben Heilman <bheilman@enova.com>","Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"}},"description":"Abort execution if a certain file exists, aka 'Cowboy mode'","license":"MIT","name":"Utilities::abortclasses","tags":["cfdc"],"version":1.7},"namespace":null}
utilities/data_classes	{"api":{"byfile":[{"description":"*Global* class to define if all the `files` exist.","name":"classname","type":"string","validation":"CLASSNAME"},{"description":"List of files that must all exist for the `classname` to be defined","name":"files","type":"list"},{"name":"defined","type":"return"}],"bynet":[{"description":"*Global* class to define if the `url_retriever` called with the `url` matches the `regex`","name":"classname","type":"string","validation":"CLASSNAME"},{"default":"/usr/bin/curl -s","description":"Command to run, will be given the `url` and expected to send the output to STDOUT","name":"url_retriever","type":"string","validation":"COMMAND_PATH"},{"description":"The URL to retrieve.","name":"url","type":"string","validation":"URL"},{"description":"A regular expression that must be matched by the URL content.  Can't contain single quotes.","name":"regex","type":"string","validation":"COMMAND_LINE_REGEX"},{"name":"defined","type":"return"}],"byport":[{"description":"*Global* class to define if all the `ports` have listeners.","name":"classname","type":"string","validation":"CLASSNAME"},{"description":"List of ports that must all have a listener for the `classname` to be defined","name":"ports","type":"list"},{"name":"defined","type":"return"}],"byprocess":[{"description":"*Global* class to define if all the `process_patterns` are matched.","name":"classname","type":"string","validation":"CLASSNAME"},{"description":"List of process patterns that must all match in the process table for the `classname` to be defined","name":"process_patterns","type":"list"},{"default":"","description":"If not empty, require this owner of the processes for the `classname` to be defined","name":"owner","type":"string"},{"default":1,"description":"Required minimum count of processes for the `classname` to be defined","name":"min_process_count","type":"string"},{"default":1000000,"description":"Required maximum count of processes for the `classname` to be defined (default is very large)","name":"max_process_count","type":"string"},{"name":"defined","type":"return"}],"byshell":[{"description":"*Global* class to define if all the `commands` run OK.","name":"classname","type":"string","validation":"CLASSNAME"},{"description":"List of commands that must all run OK for the `classname` to be defined","name":"commands","type":"list"},{"name":"defined","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo of data-driven classes."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":["linux"]},"description":"Define classes from data","license":"MIT","name":"Data::Classes","tags":["cfdc","data","classes"],"version":1}}
utilities/data_stitch	{"api":{"cfdc_stitch":[{"description":"File to edit (overwriting).","name":"filename","type":"string"},{"description":"key-value array of pieces in format CONTEXT::PIECE.  Keys should sort() sequentially.  Best use numbers like 000, 001, etc. for the keys or simply pass a JSON list.","name":"pieces","type":"array","validation":"ARRAYLIST OF CONTEXT::PIECE"},{"name":"built","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo parameters."},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"}},"description":"Build file from class-controlled pieces in format 'context::line_to_insert'.  Limitation: the pieces concatenated must not exceed MAXVARSIZE.","license":"MIT","name":"Data::Stitch","tags":["cfdc","data","stitch","template"],"version":1}}
utilities/generic_services	{"api":{"ensure":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"name","type":"string"},{"description":"startcommand","name":"start","type":"string"},{"description":"stopcommand","name":"stop","type":"string"},{"name":"pattern","type":"string"},{"name":"policy","type":"string"},{"name":"policy_implemented","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo of service control."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Control services in a generic way","license":"MIT","name":"Services::Generic","tags":["cfdc"],"version":1},"namespace":"cfdc_service_generic"}
utilities/ipverify	{"api":{"maybe_usebundle":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"ip","type":"string"},{"name":"maclist","type":"list"},{"name":"usebundle","type":"string"},{"default":"/usr/sbin/arp","name":"arp_command","type":"string"},{"name":"match","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example"},"params/if_at_home_backup_pictures.json":{"comment":"Sample parameters to backup my pictures when I am at home"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Execute a bundle if reachable ip has known MAC address","license":"MIT","name":"Utilities::ipverify","tags":["cfdc"],"version":1.1},"namespace":"cfdc_ipverify"}
utilities/nagios_plugin_agent	{"api":{},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.04},"modules/nagios_plugin_wrapper":{"desc":"plugin wrapper"},"params/check_dummy_OK.json":{"comment":"Sample parameters to do a dummy OK check"}},"metadata":{"authors":["Robert Carleton <rbc@rbcarleton.com>","Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.2.1"},"os":["linux"]},"description":"Run Nagios plugins and optionally take action","license":"MIT","name":"Monitoring::nagios_plugin_agent","tags":["cfdc"],"version":1.04}}
utilities/openssl/gencert	{"api":{"gencert":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"cert_path","type":"string"},{"default":"root","name":"owner","type":"string"},{"default":"root","name":"group","type":"string"},{"default":"365","name":"valid_days","type":"string"},{"default":"US","name":"country","type":"string"},{"default":"CA","name":"state","type":"string"},{"default":"Los Angeles","name":"locality_name","type":"string"},{"default":"Example Inc.","name":"organization","type":"string"},{"default":"IT Department","name":"org_unit_name","type":"string"},{"default":"$(sys.fqhost)","name":"common_name","type":"string"},{"default":"example@example.org","name":"email","type":"string"},{"name":"certificate_path","type":"return"},{"name":"cn","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"}},"metadata":{"authors":["Jon Henrik Bjornstad <jon.henrik.bjornstad@cfengine.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Sketch for generating self-signed certificates","license":"MIT","name":"Utilities::OpenSSL::GenCert","tags":["cfdc"],"version":1},"namespace":"cfdc_openssl"}
utilities/ping_report	{"api":{"ping":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"hosts","type":"list"},{"name":"count","type":"string"},{"name":"reached","type":"return"},{"name":"not_reached","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"changelog":{"comment":"changelog"},"main.cf":{"desc":"main file"},"params/example.json":{"comment":"Example parameters to report on a few hosts connectivity."},"test.cf":{"comment":"Test Policy"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.4.0"},"os":["linux"]},"description":"Report on pingability of hosts","license":"MIT","name":"Utilities::ping_report","tags":["cfdc"],"version":1.2},"namespace":"cfdc_ping"}
utilities/staging	{"api":{"stage":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Directory where the content can be found.","name":"source_dir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Directory where the content will be installed.","name":"dest_dir","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"description":"Owner of the dest_dir after staging.","name":"owner","type":"string","validation":"USERNAME_UNIX"},{"description":"Owner of the dest_dir after staging.","name":"group","type":"string","validation":"USERNAME_UNIX"},{"description":"Directory mode to install.","name":"dirmode","type":"string","validation":"DIGITS"},{"description":"File mode to install.","name":"filemode","type":"string","validation":"DIGITS"},{"default":{"excluded":[".cvs",".svn",".subversion",".git",".bzr"],"postcommand":"/bin/echo postcommand","precommand":"/bin/echo precommand"},"description":"Staging options.","name":"options","type":"array"},{"name":"staged","type":"return"},{"name":"directory","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"Demo parameters."},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"}},"description":"Stage a directory of content to a target directory.","license":"MIT","name":"Utilities::Staging","tags":["cfdc","stage","directory","rsync"],"version":1},"namespace":"cfdc_staging"}
utilities/tidy_dir	{"api":{"tidy_dir":[{"name":"runenv","type":"environment"},{"name":"mymetadata","type":"metadata"},{"description":"The directory to clean up","name":"dir","type":"string"},{"default":"","description":"Files/Dirs older than this will be deleted with reckless abandon ( set to null string to disable.)","name":"days_old","type":"string"},{"default":"","description":"recurse into subdirectories while searching for files.","name":"recurse","type":"boolean"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo.json":{"comment":"simple demo of sketch"},"test.cf":{"desc":"standalone test"}},"metadata":{"authors":["Philip J Freeman <philip.freeman@gmail.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":111},"cfengine":{"version":"3.4.0"}},"description":"Simple sketch to tidy a directory","license":"MIT","name":"Utilities::tidy_dir","tags":["cfdc"],"version":"0.01"},"namespace":"cfdc_utilities_tidy_dir"}
utilities/vcs_mirror	{"api":{"mirror":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"name":"vcs","type":"string"},{"name":"path","type":"string"},{"name":"origin","type":"string"},{"name":"branch","type":"string"},{"name":"options","type":"array"},{"name":"deploy_path","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file","version":1.12},"params/cfengine-copbl.json":{"comment":"Sample parameters to use Git to check out the CFEngine standard library (COPBL) into /tmp/cfengine-copbl"},"params/cfengine-core-runas-tzz.json":{"comment":"Same as cfengine-core.json, but runs as user 'tzz'"},"params/cfengine-core.json":{"comment":"Sample parameters to use Git to check out the CFEngine core into /tmp/cfengine-core"},"params/thrift-lib-perl.json":{"comment":"Sample parameters to use Subversion to check out the Thrift Perl libraries into /tmp/thrift-lib-perl"}},"metadata":{"authors":["Nick Anderson <nick@cmdln.org>","Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{"version":"1.0.0"},"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.5.0"}},"description":"Check out and update a VCS repository.","license":"MIT","name":"VCS::vcs_mirror","tags":["cfdc"],"version":1.12},"namespace":"cfdc_vcs"}
web_apps/wordpress	{"api":{},"interface":["wordpress.cf"],"manifest":{"README.md":{"documentation":true},"params/wordpress-base.json":{"comment":"Base configuration parameters for different platforms"},"params/wordpress.json":{"comment":"Example configuration parameters"},"wordpress.cf":{"desc":"main file"}},"metadata":{"authors":["Aleksey Tsalolikhin <atsaloli.tech@gmail.com>","Diego Zamboni <diego.zamboni@cfengine.com>"],"depends":{"CFEngine::stdlib":{"version":105},"cfengine":{"version":"3.3.0"},"os":["linux"]},"description":"Install and configure Wordpress","license":"MIT","name":"WebApps::wordpress_install","tags":["cfdc"],"version":1}}
web_servers/apache	{"api":{"apache":[{"name":"runenv","type":"environment"},{"name":"metadata","type":"metadata"},{"description":"Main site host name.","name":"hostname","type":"string","validation":"HOSTNAME"},{"default":80,"description":"Main site port number.","name":"port","type":"string","validation":"PORT_NUMBER"},{"default":443,"description":"Main site SSL port number.","name":"ssl_port","type":"string","validation":"PORT_NUMBER"},{"description":"Document root for the main site.","name":"docroot","type":"string","validation":"PATH_ABSOLUTE_UNIX_OR_WINDOWS"},{"default":{"ssl":true},"description":"Apache options.  Provide ssl=1 if you want SSL enabled.","name":"options","type":"array"},{"name":"installed","type":"return"},{"name":"configured","type":"return"},{"name":"running","type":"return"},{"name":"docroot","type":"return"}]},"interface":["main.cf"],"manifest":{"README.md":{"documentation":true},"main.cf":{"desc":"main file"},"params/demo_apache.json":{"comment":"Demo parameters: install Apache."},"templates/debian/default-ssl.tmpl":{"comment":"Default SSL site"},"templates/debian/default.tmpl":{"comment":"Default non-SSL site"},"templates/debian/ports.tmpl":{"comment":"Ports template"},"test.cf":{"comment":"Test Policy"},"test.pl":{"test":true}},"metadata":{"authors":["Ted Zlatanov <tzz@lifelogs.com>"],"depends":{"CFEngine::dclib":{},"CFEngine::dclib::3.5.0":{},"CFEngine::stdlib":{"version":109},"cfengine":{"version":"3.5.0"},"os":{"debian":true,"redhat":true}},"description":"Install and configure a webserver, e.g. Apache","license":"MIT","name":"Apache::Simple","tags":["cfdc","webserver","apache"],"version":1},"namespace":"cfdc_webserver"}

{
    manifest:
    {
        "main.cf": { desc: "main file" },
//        "README.md": { documentation: true },
//        "params/demo.json": { comment: "simple demo of sketch" },
//        "modules/getuserhome.sh": { module: true, perm: 755, comment: "Module to get a user's home directory." }
    },

    metadata:
    {
        name: "Security::password_expiration",
	    description: "Manage password expiration and age limits",
        version: "1.00",
        license: "MIT",
        tags: [ "cfdc" ],
        authors: [ "Diego Zamboni <diego.zamboni@cfengine.com>" ],
        depends: { "CFEngine::stdlib": { version: 105 }, cfengine: { version: "3.4.0" }, os: [ "linux" ] }
    },

    api:
    {
        // this is the name of the bundle!
        password_expiration:
        [
//            { type: "environment", name: "runenv", },
//            { type: "metadata", name: "mymetadata", },
//            { type: "string", name: "prefix", default: "__PREFIX__" },

            { name: "pass_max_days", type: "string",
              description: "Maximum password age, in days" },
            { name: "pass_min_days", type: "string",
              description: "Minimum days between password changes",
              default: "5" },
            { name: "pass_warn_age", type: "string",
              description: "Warning period (in days) before the password expires",
              default: "2" },
            { name: "min_uid", type: "string",
              description: "Minimum UID to consider when making changes to existing users",
              default: "500" },
            { name: "skipped_users", type: "string",
              description: "Comma-separated list of users to skip",
              default: "" },
            { name: "skipped_uids", type: "string",
              description: "Comma-separated list of UIDs to skip",
              default: "" }
        ],
    },

    namespace: "cfdc_password_expiration",
    
    interface: [ "main.cf" ],
}

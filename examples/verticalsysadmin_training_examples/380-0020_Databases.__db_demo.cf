# Demonstration of CFEngine's databases promises.
# First, install and configure a PostgreSQL database 
# cluster and create an database.
# Then use "databases" type promises to set up and 
# maintain the schema of 3 tables.
#
# Note: package_list_update_ifelapsed should be set to 0
# for demoes.
#
# Demoes: - self-heal from database cluster shutdown
#         - self-heal from dropping a table
#         - self-heal from dropping a table column
#         - self-heal from changes to pg_hba.conf





body common control {

              version => "1.1 21-Oct-2011";

   host_licenses_paid => "10";

               inputs => { "libraries/cfengine_stdlib.cf" };

       bundlesequence =>        {
                                  "db_cluster_is_installed",

                                  "pg_hba_conf_trusts_local_users",

                                  "db_cluster_is_running",

                                  "database_exists",

                                  "schema_exists_and_is_correct",
       };

}

################################################

bundle agent db_cluster_is_installed {

  packages:


      "postgresql-server"

       package_policy => "add",
       package_method => yum,
              classes => if_repaired("start_postgres");

      "postgresql"
       package_policy => "add",
       package_method => yum;


  commands:

    start_postgres::

      "/sbin/service postgresql start";


}

################################################

bundle agent pg_hba_conf_trusts_local_users {


  files:
      "/var/lib/pgsql/data/pg_hba.conf"

      # this is a regular comment

            edit_line => trust_local_users,
              comment => "Allow root to access the DB cluster so CFEngine can set up the database and table schema",
      # the above was a Knowledge Management comment
              classes => if_repaired("reload_postgres");

  commands:

    reload_postgres::

      "/sbin/service postgresql reload";


}


################################################


bundle agent db_cluster_is_running {


  processes:

      "postgres"

        restart_class => "start_postgres";


  commands:

    start_postgres::

      "/sbin/service postgresql start";

}




################################################

bundle agent database_exists {

  commands:

      "/usr/bin/createdb -U postgres conference >/dev/null 2>/dev/null"
              contain => in_shell;

}


################################################


bundle agent schema_exists_and_is_correct {

  vars:
      "create_and_verify"
                slist => { "create", "verify" };


  databases:


      "conference/speakers"

   database_operation => "$(create_and_verify)",
        database_type => "sql",
     database_columns => { 
                           "speaker_name,varchar,50",
                           "speaker_bio,varchar,600",
                           "speaker_affiliation,varchar,50",
     },
      database_server => demo_postgres_server;


      "conference/rooms"

   database_operation => "$(create_and_verify)",
        database_type => "sql",
     database_columns => { 
                           "room_name,varchar,256",
                           "room_number_of_seats,integer",
     },
      database_server => demo_postgres_server;


      "conference/talks"

   database_operation => "$(create_and_verify)",
        database_type => "sql",
     database_columns => { 
                           "speaker_name,varchar,256",
                           "room_name,varchar,256",
                           "start_time,date",
     },
      database_server => demo_postgres_server;


}


################################################


body database_server demo_postgres_server {

      db_server_owner => "postgres";

   db_server_password => "";

       db_server_host => "localhost";

       db_server_type => "postgres";

db_server_connection_db => "postgres";

}

################################################

bundle edit_line trust_local_users {

      delete_lines: ".*";

      insert_lines: "
# !!! This file is under CFEngine control.  Do not edit
# it directly or your changes may be overwritten.
#
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
local   all         all                               trust
";

}

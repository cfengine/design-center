!! SKIP !!

bundle agent example {

  methods:
      "any" usebundle => files__selinux__allow_httpd_to_connect_to_and_to_write_to_stream_sockets__for_pgbouncer;

}

body common control {

               inputs => { "libraries/cfengine_stdlib.cf" };

}


bundle agent files__selinux__allow_httpd_to_connect_to_and_to_write_to_stream_sockets__for_pgbouncer {

  classes:

      "allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles_module_is_loaded"

           expression => returnszero("/usr/sbin/semodule -l | /bin/grep allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles >/dev/null", "useshell");

  methods:
    !allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles_module_is_loaded::
      "any" usebundle => compile_and_package_and_load_selinux_module;

}


bundle agent compile_and_package_and_load_selinux_module {

  files:

      "/root/SELINUX/."
               create => "true",
              comment => "/root/SELINUX is just a scratch space for SELinux policy files as we compile, package and load SELinux policy modules.";
      
  files:

      "/root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.te"
               create => "true",
               perms  => m("0600"),
            edit_line => Allow_Httpd_To_Connect_To_Unix_Stream_Sockets_And_To_Write_To_Socket_Files,
              comment => "httpd connects to Postgres database through pgbouncer.  we want httpd to connect to pgbouncer using a socket file instead of over TCP/IP, because we've had instances where PHP pages that connect to the database a lot in quick succession use up all available network ports and subsequent connection attempts fail.";
      

  commands:

      "/usr/bin/checkmodule  -M -m -o /root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.mod \
/root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.te  && \
/usr/bin/semodule_package -o /root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.pp \
-m /root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.mod  && \
/usr/sbin/semodule -i /root/SELINUX/allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles.pp",
              comment => "Compile the module, Create the package, Load the module into the kernel.",
              contain => in_shell;

}


bundle edit_line Allow_Httpd_To_Connect_To_Unix_Stream_Sockets_And_To_Write_To_Socket_Files {

      delete_lines: ".*";

  insert_lines:
      "
# This file was generated by CFEngine

module allowHttpdToConnectToUnixStreamSocketsAndToWriteToSocketFiles 1.0;

require {
type httpd_t;
type tmp_t;
type initrc_t;
class sock_file write;
class unix_stream_socket connectto;
}

#============= httpd_t ==============
allow httpd_t initrc_t:unix_stream_socket connectto;
allow httpd_t tmp_t:sock_file write;

"

          insert_type => "preserve_block";


}

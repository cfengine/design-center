# this file contains a modified set_variable_values bundle.
# the main difference is you won't get lines like
# "name =value2" if you start with "name = value1".
# Instead you get lines like "name=value2".

bundle common global {

  vars:

      "stuff[Location]" string => "Chicago";
      "stuff[Time]"     string => "Monday, April 2nd";
}



bundle agent example {

  files:

      "/tmp/example"
               create => "true",
            edit_line => set_variable_values("global.stuff");
}


bundle edit_line set_variable_values(v)

{
  vars:

      "index" slist => getindices("$(v)");

  field_edits:

      # match a line starting like the key *BLANK SPACE* = something

      "\s*$(index)\s+=.*"

           edit_field => col("=","1","$(index)","set"),
              comment => "Edit name=value definition, if there is whitespace after the name to eliminate said whitespace otherwise our insert_lines promise would create a duplicate name=value entry WITHOUT whitespace.";

      # match a line starting like the key = something

      "\s*$(index)=.*"

           edit_field => col("=","2","$($(v)[$(index)])","set"),
              comment => "Edit name=value definition to set the value.  Incidentally, this gets rid of any whitespace after the equals sign.";

  insert_lines:

      "$(index)=$($(v)[$(index)])",

              comment => "Insert name=value definition";
}

body edit_field col(split,col,newval,method)
{
   field_separator    => "$(split)";
   select_field       => "$(col)";
   value_separator    => ",";
   field_value        => "$(newval)";
   field_operation    => "$(method)";
   extend_fields      => "true";
   allow_blank_fields => "true";
}

body replace_with value(x)
{
        replace_value => "$(x)";
          occurrences => "all";
}


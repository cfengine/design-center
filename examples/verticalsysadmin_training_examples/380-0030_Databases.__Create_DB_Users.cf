



body common control {

       bundlesequence => { "create_db_users" };
               inputs => { "libraries/cfengine_stdlib.cf" };

}


###########################################################################################

bundle common db {

  vars:

      "db_users"

              slist   => splitstring(execresult ("/usr/bin/psql -AXqt -c 'select usename from pg_user' -U postgres", "noshell"), "\n", "100"),
              comment => "List of DB users";


      "createuser_defaults"
               string => " -U postgres  --no-createdb --no-createrole --no-superuser ",
              comment => "Default arguments we'll use with /usr/bin/createuser to create regular unprivileged PostgreSQL accounts";

}

###########################################################################################


bundle agent create_db_users {

  classes:

      "postgres_node"

           expression => returnszero ("/usr/bin/pgrep postmaster >/dev/null", "useshell"),
              comment => "Identify if this node is running postgres.";


  methods:

    postgres_node::

      "any"
            usebundle => create_pg_user("nagios", "$(db.createuser_defaults)"),
              comment => "Every node that runs postgres should have pg user nagios for monitoring using check-postgres.pl plugin";
      
    specialcase1::

      "any"
            usebundle => create_pg_user("superuser1", " -U postgres --superuser "),
              comment => "Create db superuser superuser1";

    specialcase2::

      "any"
            usebundle => create_pg_user("regularuser1", "$(db.createuser_defaults)"),
              comment => "Application X requires regularuser1";


}


############################################################################################

bundle agent create_pg_user(username,args) {


  classes:

      "$(username)_exists"

           expression => reglist("@(db.db_users)","$(username)"),
              comment => "Check if username already exists in the database.";


  commands:


      "/usr/bin/createuser $(args)  $(username)" 
              contain => in_shell_and_silent,
           ifvarclass => "!$(username)_exists",
              comment => "Create PostgreSQL user $(username) with createuser args $(args)";

}

############################################################################################

